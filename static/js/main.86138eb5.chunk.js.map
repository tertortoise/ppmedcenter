{"version":3,"sources":["images/imageBlank.svg","images/img.jpg","components/Appts/ApptDoctors.module.scss","components/Appts/ApptConfirm.module.scss","components/Personal/Personal.module.scss","actions/actions.js","actions/actionTypes.js","data/dataAppts.js","data/dataScheduleProc.js","data/dataSchedule.js","utils/arraySortByProp.js","components/UI/Logo.js","components/Layout/Layout.js","components/UI/DialogAlertMUI.js","components/ApptsList/ApptsListLine.js","components/Calendar/Calendar.js","components/Dash/Dash.js","components/UI/SelectableButton.js","components/Appts/ApptProgress.js","components/UI/SelectableSpan.js","components/Appts/ApptSpecialities.js","components/Appts/ApptDoctors.js","components/Appts/ApptSpecSwitch.js","components/Appts/ApptSchDoc.js","components/Appts/ApptSchDate.js","components/Appts/ApptSchedule.js","components/Appts/ApptConfirm.js","components/UI/Search.js","components/UI/Spinner.js","data/dataSpecialities.js","data/dataDoctors.js","components/Appts/ApptEditor.js","components/ApptsList/ApptsListFilter.js","components/ApptsList/ApptsList.js","utils/inputValidation.js","components/UI/Input.js","components/Personal/PersonalData.js","components/Personal/PersonalPwr.js","components/Personal/Personal.js","App.js","error/ErrorBoundary.js","reducers/reducer.js","store.js","theme.js","index.js","components/Appts/ApptSpecialities.module.scss","components/UI/Input.module.scss","images/docMale.jpg","images/docFemale.jpg","components/Calendar/Calendar.module.scss","components/Dash/Dash.module.scss","components/UI/SelectableSpan.module.scss"],"names":["module","exports","__webpack_require__","p","Paper","FotoCont","DetailsCont","FullName","Speciality","Experience","Price","SchCont","DatesCont","DateLine","Date","Time","BtnDiv","PaperHover","GridItem","Confirm","Header","DateTime","Attr","Personal","BreadCrumbs","Contents","Foto","FotoPicture","Picture","FotoButtons","BtnUploadCont","BtnUpload","BtnUploadComment","BtnUploadError","BtnDelete","Form","FormContents","Remark","Buttons","fetchScheduleGen","scheduleGen","type","payload","fetchAppts","appts","editAppt","apptEdited","dataApptsProc","apptId","doctorId","speciality","docFullName","time","day","map","item","timeString","padStart","dateString","moment","add","format","docDateTime","concat","searchString","toLowerCase","dateTime","date","dataScheduleProc","schedule","start","end","occupied","forEach","doctor","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","dayString","occupiedR","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","push","err","return","reverse","startTimeString","endTimeString","startTime","set","hour","slice","minute","endTime","slotsNum","Math","floor","diff","i","mult","Number","Boolean","available","length","pop","arraySortByProp","array","prop","order","arguments","sort","a","b","comparison","Logo","_ref","props","react_default","createElement","width","height","viewBox","fill","xmlns","d","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","useStyles","makeStyles","theme","_drawer","_appBar","_content","root","drawer","position","Object","defineProperty","breakpoints","up","flexShrink","backgroundColor","drawerPaper","top","drawerModalPaper","appBar","color","palette","grey","A700","down","padding","display","logoSpan","primary","main","fontWeight","toolbar","objectSpread","mixins","paper","alignItems","justifyContent","iconCont","paddingRight","alignSelf","icon","fontSize","menuFlex","activeLink","secondary","light","borderRadius","moreIconCont","buttonDiv","button","lineHeight","listItemPersonal","fontStyle","listItemRoot","& .MuiSvgIcon-root","&:hover","dark","&.Mui-disabled","opacity","&.Mui-selected","content","marginTop","marginLeft","flexGrow","spacing","paddingLeft","bottom","connect","state","personalImage","surname","personalData","firstName","middleName","withRouter","useTheme","classes","mainMenu","eng","name","about","specialits","prices","news","contacts","cabinet","xs","sm","this","md","xl","lg","_useState","useState","_useState2","slicedToArray","mmOpen","setMMOpen","mmRef","React","useRef","handleMMClose","event","current","contains","target","currentWidth","toConsumableArray","keys","reduce","output","key","matches","useMediaQuery","only","menuItems","classNameActive","className","mmItems","includes","MenuItem","onClick","_useState3","_useState4","mobileOpen","setMobileOpen","handleDrawerToggle","handleMenuClick","path","e","history","List","list","ListItem","ListItemAvatar","Avatar","src","ListItemText","secondaryTypographyProps","selected","location","pathname","disabled","ListItemIcon","Home","Create","Ballot","Person","AppBar","Toolbar","Grid","container","UI_Logo","Typography","variant","noWrap","Hidden","xsDown","clsx","Phone","smDown","Alarm","mdDown","LocationOn","mdUp","IconButton","Menu","ref","prevOpen","MoreHoriz","Popper","open","anchorEl","transition","disablePortal","TransitionProps","placement","Grow","assign","style","transformOrigin","ClickAwayListener","onClickAway","MenuList","Button","size","aria-label","implementation","Drawer","anchor","direction","onClose","ModalProps","keepMounted","children","withStyles","btnYes","btnYesColor","actionsDiv","renderBtnOpen","title","yesHandler","btnNoName","btnYesName","_React$useState","_React$useState2","setOpen","handleClose","triggerYesHandler","react","Dialog","aria-labelledby","aria-describedby","DialogTitle","disableTypography","align","DialogContent","DialogActions","autoFocus","ApptsListLine","dialogYesHandler","_this","deleteApptHandler","appt","buttonBlock","_this2","_this$props","apptStatus","showButtons","ButtsCont","editApptHandler","UI_DialogAlertMUI","handleClickOpen","Delete","split","join","LineCont","TextCont","TextItem","Component","flexWrap","&:not(:last-child)","marginBottom","&:first-child","Active","Past","ReactCalendar","currDateString","today","getFullYear","toString","getMonth","getDate","locale","apptDates","tileDisabled","activeStartDate","view","tileClassName","_ref2","styles","Today","apptDate","Appt","itemDateString","setState","prevProps","prevState","_this3","entry_default","CustomCalendar","maxDetail","Dash","filterThresh","clickHandler","apptsContents","apptsList","filter","ApptsList_ApptsListLine","Section","Calendar","SelectableButton","other","objectWithoutProperties","BtnItem","stageChangeHandler","_ref$activeStage","activeStage","btn1Name","prev","btn2Name","btn3Name","btn1Selected","btn2Selected","btn3Selected","btn1Disabled","btn2Disabled","btn3Disabled","UI_SelectableButton","memo","classNames","Span","Selected","nextProps","ApptSpecialities","specialities","spec","visible","ageCategory","Item","UI_SelectableSpan","details","selectHandler","BtnSpan","Department","adult","child","ApptDoctors","contents","doctors","imgSrc","gender","docMaleImage","docFemaleImage","alt","fullName","get","experience","Next","selectedSpecialities","selectedDoctors","switchHandler","ApptSchDoc","docSpeciality","disableRipple","btnDisabled","ApptSchDate","timeSlots","timeSlot","ApptSchedule","btnName","schByDoc","_loop","doc","dateSet","Set","mapValue","page","btnDocDisabled","docId","Appts_ApptSchDoc","Array","from","Appts_ApptSchDate","ApptConfirm","confirmedMsg","newAppt","Search","TextField","label","margin","placeholder","onChange","interim","match","refined","replace","changeSearchHandler","helperText","InputProps","endAdornment","InputAdornment","esm_Search","Spinner","contentType","priceCoeff","picture","ApptEditor","stages","confirm","confirmed","btnNameNext","SpecialityId","search","empty","prevApptId","specialityId","loading","currId","newMap","Map","_this$searchProcessor","searchProcessor","_this$searchProcessor2","prevId","newId","_this$selectProcessor","selectProcessor","_this$selectProcessor2","_this$selectProcessor3","nextStage","stopPropagation","el","newEl","updateSchedule","docInfo","makeSchedule","searchTerm","indexOf","currItem","prevSpec","datetime","prevDocDateTime","newApptId","index","random","find","prevSchGenItem","newSchGenItem","initialStage","dataToMap","sorted","elem","newElem","dataSpecialities","dataDoctors","stagePage","stageSwitch","btnBack","btnNext","UI_Spinner","BtnForw","ArrowForward","Appts_ApptSpecSwitch","UI_Search","Appts_ApptSpecialities","buttonVisible","Appts_ApptDoctors","BtnBack","ArrowBack","Appts_ApptSchedule","Appts_ApptConfirm","MB1","Appts_ApptProgress","MB2","mapDispatchToProps","dateTimeSlot","ApptsListFilter","rep","renderButtons","propTypes","filterId","PropTypes","string","isRequired","ApptsList","toISOString","changeFilterHandler","btnId","apptToDeleteIndex","apptToDelete","filteredList","searchDisabled","result","Container","ApptsList_ApptsListFilter","ML","StyledApptsList","paddingBottom","validate","rules","isValid","required","trim","message","notEqualList","toUpperCase","number","isNaN","minLength","maxLength","min","max","regexp","_rules$regexp$filter","minmax","_rules$regexp$filter3","Input","inputMessage","readOnly","Editable","touched","Touched","valid","Invalid","InputSpan","elementConfig","changed","onBlur","blurred","htmlFor","LabelSpan","HelperSpan","PersonalData","data","elementType","validation","inputDefaultMessage","phone","email","login","changeStageHandler","info","fetchPersonalData","changeStage","changeInputHandler","input","wasChanged","inputElement","matchedRaw","unshift","matched","padEnd","str","charAt","capitalize","_validate","inputInvalidMessage","dataInputsReadOnly","inputsAllValid","inputsAnyTouched","saveBtnDisabled","buttons","UI_Input","PersonalPwr","personalPwr","fetchPersonalPwr","newPwrElement","newPwrConfirmElement","toggleVisibility","inputsAllTouched","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fotoUploadHandler","preventDefault","file","files","localImageUrl","window","URL","createObjectURL","fetchPersonalImage","revokeObjectURL","blankImage","fotoMsg","fotoMsgError","fotoDelete","currStage","inputFoto","createRef","elements","fotoBtns","editData","editPwr","btnsEdit","breadCrumbsExtra","_this$state","click","Personal_PersonalData","Personal_PersonalPwr","App","CssBaseline","Layout_Layout","react_router","exact","component","ErrorBoundary","hasError","initialState","appttId","image","error","reducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","getState","dispatch","createMuiTheme","ReactDOM","render","es","error_ErrorBoundary","react_router_dom","MuiThemeProvider","src_App","document","getElementById","MuiButton-sizeSmall"],"mappings":"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","file":"static/js/main.86138eb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/imageBlank.2f22e7c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/img.02421cba.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"ApptDoctors_Paper__2PeUq\",\"FotoCont\":\"ApptDoctors_FotoCont__23jL4\",\"DetailsCont\":\"ApptDoctors_DetailsCont__zztAb\",\"FullName\":\"ApptDoctors_FullName__2_RBI\",\"Speciality\":\"ApptDoctors_Speciality__ULlS2\",\"Experience\":\"ApptDoctors_Experience__2oUeH\",\"Price\":\"ApptDoctors_Price__2LL4g\",\"SchCont\":\"ApptDoctors_SchCont__2G28H\",\"DatesCont\":\"ApptDoctors_DatesCont__26h6X\",\"DateLine\":\"ApptDoctors_DateLine__1sdbB\",\"Date\":\"ApptDoctors_Date__RhQHu\",\"Time\":\"ApptDoctors_Time__2XrOc\",\"BtnDiv\":\"ApptDoctors_BtnDiv__gpoP0\",\"PaperHover\":\"ApptDoctors_PaperHover__1oWKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"ApptConfirm_Paper__2TIUx\",\"GridItem\":\"ApptConfirm_GridItem__1AcGe\",\"Confirm\":\"ApptConfirm_Confirm__2iGys\",\"Header\":\"ApptConfirm_Header__31obe\",\"DateTime\":\"ApptConfirm_DateTime__2bDQi\",\"Price\":\"ApptConfirm_Price__1Lq9o\",\"Attr\":\"ApptConfirm_Attr__1CLYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Personal\":\"Personal_Personal__1Xh-J\",\"BreadCrumbs\":\"Personal_BreadCrumbs__1spky\",\"Contents\":\"Personal_Contents__1mUIU\",\"Foto\":\"Personal_Foto__IuDyL\",\"FotoPicture\":\"Personal_FotoPicture__32kpP\",\"Picture\":\"Personal_Picture__k6mCP\",\"FotoButtons\":\"Personal_FotoButtons__ec_NC\",\"BtnUploadCont\":\"Personal_BtnUploadCont__2sZGv\",\"BtnUpload\":\"Personal_BtnUpload__1hlqo\",\"BtnUploadComment\":\"Personal_BtnUploadComment__3k6zV\",\"BtnUploadError\":\"Personal_BtnUploadError__Msoui\",\"BtnDelete\":\"Personal_BtnDelete__2Kg8X\",\"Form\":\"Personal_Form__2eh91\",\"FormContents\":\"Personal_FormContents__21luR\",\"Remark\":\"Personal_Remark__3udJ0\",\"Buttons\":\"Personal_Buttons__3yBbe\"};","import * as actions from './actionTypes';\n\nconst fetchScheduleGen = (scheduleGen) => {\n  return {\n    type: actions.FETCH_SCHEDULEGEN,\n    payload: scheduleGen,\n  }\n}\n\nconst fetchAppts = (appts) => {\n  return {\n    type: actions.FETCH_APPTS,\n    payload: appts,\n  }\n}\n\nconst editAppt = (apptEdited) => {\n  return {\n    type: actions.EDIT_APPT,\n    payload: apptEdited,\n  }\n}\n\nconst fetchPersonalData = (personalData) => {\n  return {\n    type: actions.FETCH_PERSONALDATA,\n    payload: personalData,\n  }\n}\n\nconst fetchPersonalImage = (personalImage) => {\n  return {\n    type: actions.FETCH_PERSONALIMAGE,\n    payload: personalImage,\n  }\n}\n\nconst fetchPersonalPwr = (personalPwr) => {\n  return {\n    type: actions.FETCH_PERSONALPWR,\n    payload: personalPwr,\n  }\n}\n\nexport {\n  fetchScheduleGen,\n  fetchAppts,\n  editAppt,\n  fetchPersonalData,\n  fetchPersonalImage,\n  fetchPersonalPwr,\n}","export const FETCH_SCHEDULEGEN = 'FETCH_SCHEDULEGEN';\nexport const FETCH_APPTS = 'FETCH_APPTS';\nexport const EDIT_APPT = 'EDIT_APPT';\nexport const DELETE_APPT = 'DELETE_APPT';\nexport const FETCH_PERSONALDATA = 'FETCH_PERSONALDATA';\nexport const FETCH_PERSONALIMAGE = 'FETCH_PERSONALIMAGE';\nexport const FETCH_PERSONALPWR = 'FETCH_PERSONALPWR';","import moment from 'moment';\n\nconst apptsRaw = [\n  {\n    apptId: '156768',\n    doctorId: 'd001',\n    speciality: 'Терапевт',\n    docFullName: 'Иванова Мария Петровна',\n    time: { day: -80, time: '8:40' },\n  },\n  {\n    apptId: '194800',\n    doctorId: 'd003',\n    speciality: 'Хирург',\n    docFullName: 'Мясников Иван Николаевич',\n    time: { day: -150, time: '14:40' },\n  },\n  {\n    apptId: '456788',\n    doctorId: 'd002',\n    speciality: 'Терапевт',\n    docFullName: 'Кабанова Наталья Ивановна',\n    time: { day: 3, time: '10:20' },\n  },\n];\n\nconst dataApptsProc = apptsRaw.map((item) => {\n  const timeString = item.time.time.padStart(5, '0');\n  const dateString = moment()\n    .add(item.time.day, 'd')\n    .format('YYYY-MM-DD');\n  const docDateTime = `${item.doctorId} ${dateString} ${timeString}`;\n  const searchString = `${item.docFullName.toLowerCase()} ${item.speciality.toLowerCase()}`;\n  return {\n    apptId: item.apptId,\n    doctorId: item.doctorId,\n    speciality: item.speciality,\n    docFullName: item.docFullName,\n    dateTime: dateString + ' ' + timeString,\n    date: dateString,\n    time: timeString,\n    docDateTime,\n    searchString,\n  };\n});\n\nexport default dataApptsProc;","import moment from 'moment';\nimport dataSchedule from './dataSchedule';\n/** processing initial schedule data into Array to be shoved into store */\nconst dataScheduleProc = [];\ndataSchedule.forEach((doctor) => {\n  const doctorId = doctor.doctorId;\n  for (const day of doctor.schedule) {\n    /** getting day stamp */\n    const dayString = moment()\n      .add(day, 'd')\n      .format('YYYY-MM-DD');\n    /** getting docDateTime for occupied slots */\n    const occupied = [];\n    let occupiedR = [];\n    for (const time of day.occupied) {\n      const timeString = time.padStart(5, '0');\n      occupied.push(doctorId + ' ' + dayString + ' ' + timeString);\n    }\n    occupiedR = occupied.reverse();\n    //console.log(occupied);\n    const startTimeString = day.start.padStart(5, '0');\n    const endTimeString = day.end.padStart(5, '0');\n    const startTime = moment()\n      .add(day, 'd')\n      .set({\n        hour: +startTimeString.slice(0, 2),\n        minute: +startTimeString.slice(3),\n      });\n    const endTime = moment()\n      .add(day, 'd')\n      .set({\n        hour: +endTimeString.slice(0, 2),\n        minute: +endTimeString.slice(3),\n      });\n    const slotsNum = Math.floor(endTime.diff(startTime, 'minutes') / 20);\n    for (let i = 0; i < slotsNum; i++) {\n      const mult = Number(Boolean(i));\n      const timeString = startTime.add(20 * mult, 'm').format('HH:mm');\n      const docDateTime = doctorId + ' ' + dayString + ' ' + timeString;\n      let available = true;\n      if (docDateTime === occupiedR[occupiedR.length-1]) {\n        available = false;\n        occupiedR.pop();\n      }\n      dataScheduleProc.push({ doctorId, docDateTime, available });\n    }\n  }\n});\n\nexport default dataScheduleProc;","const schedule = [\n  {\n    doctorId: 'd001',\n    schedule: [\n      {\n        day: 1,\n        start: '8:00',\n        end: '14:00',\n        occupied: ['9:20', '10:00', '10:20'],\n      },\n      {\n        day: 2,\n        start: '14:00',\n        end: '20:20',\n        occupied: ['14:40', '15:00', '16:20'],\n      },\n      {\n        day: 3,\n        start: '12:00',\n        end: '18:00',\n        occupied: ['12:00', '12:20', '15:00', '15:20', '16:20'],\n      },\n    ],\n  },\n  {\n    doctorId: 'd002',\n    schedule: [\n      {\n        day: 1,\n        start: '14:00',\n        end: '18:00',\n        occupied: ['14:20', '16:00', '17:20'],\n      },\n      {\n        day: 3,\n        start: '8:00',\n        end: '13:20',\n        occupied: ['9:40', '10:20', '12:40'],\n      },\n      {\n        day: 4,\n        start: '9:00',\n        end: '13:00',\n        occupied: ['9:40', '10:20', '12:00', '12:20', '12:40'],\n      },\n    ],\n  },\n  {\n    doctorId: 'd003',\n    schedule: [\n      {\n        day: 1,\n        start: '14:00',\n        end: '18:00',\n        occupied: ['14:20', '16:00', '17:20'],\n      },\n      {\n        day: 3,\n        start: '8:00',\n        end: '13:20',\n        occupied: ['9:40', '10:20', '12:40'],\n      },\n      {\n        day: 4,\n        start: '9:00',\n        end: '13:00',\n        occupied: ['9:40', '10:20', '12:00', '12:20', '12:40'],\n      },\n    ],\n  },\n];\n\nexport default schedule;\n","/** Simple utility to sort array of object by an object prop (string or number)\n *  @param {array} array - Array to be sorted\n *  @param {string} prop - property name to sort by\n * @param {string} order - order: 'asc' default, 'desc'\n * @returns {array} - Returns sorted array\n */\nexport default (array, prop, order = 'asc') => {\n\n  if (!array.length || !array[0] || !array[0][prop]) return array;\n  const sorted = array.sort((a, b) => {\n    let comparison = 0;\n    if (a[prop] < b[prop]) comparison = -1;\n    if (a[prop] > b[prop]) comparison = 1;\n    if (a[prop] === b[prop]) comparison = 0;\n    return order === 'desc' ? comparison * -1 : comparison;\n  })\n  return sorted;\n}","import React from 'react';\n\nconst Logo = ({ props }) => {\n  return (\n    <svg\n      width='50'\n      height='50'\n      viewBox='0 0 65 60'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'\n    >\n      <path\n        d='M30.2453 25.8743H40.1125V16.6238H57.273V25.8743H62.2494C64.0323 23.193 65.0667 20.1532 65.0667 16.8209C65.0667 7.5325 57.0366 0.00120663 47.131 0.00120663C41.1124 0.00120663 35.7867 2.78053 32.5333 7.04557C29.28 2.78039 23.9543 0 17.9357 0C8.03008 0 0 7.52955 0 16.818C0 20.8558 1.51755 24.5606 4.04686 27.4597L32.5333 59.7931L40.1125 51.1903V41.9622H30.2453V25.8743Z'\n        fill='url(#paint0_linear)'\n      />\n      <defs>\n        <linearGradient\n          id='paint0_linear'\n          x1='32.5333'\n          y1='0'\n          x2='32.5333'\n          y2='59.7931'\n          gradientUnits='userSpaceOnUse'\n        >\n          <stop stopColor='#B5F42A' />\n          <stop offset='0.416667' stopColor='#2AB5F4' />\n          <stop offset='0.84375' stopColor='#F42AB5' />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n};\n\nexport default Logo;\n","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Avatar,\n  Grid,\n  Hidden,\n  Paper,\n  IconButton,\n  AppBar,\n  Toolbar,\n  Drawer,\n  Typography,\n  useMediaQuery,\n  useTheme,\n  Button,\n  Popper,\n  Grow,\n  ClickAwayListener,\n  MenuList,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemAvatar,\n} from '@material-ui/core';\nimport {\n  Alarm,\n  Ballot,\n  Create,\n  Home,\n  LocationOn,\n  MoreHoriz,\n  Menu,\n  Person,\n  Phone,\n} from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport Logo from '../UI/Logo';\n\nconst drawerWidth = 200;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // display: 'flex',\n  },\n  drawer: {\n    position: 'fixed',\n    [theme.breakpoints.up('md')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    '& a:active': {\n      backgroundColor: 'green',\n    },\n  },\n  drawerPaper: {\n    top: '140px',\n    width: drawerWidth,\n  },\n  drawerModalPaper: {\n    width: drawerWidth,\n  },\n  appBar: {\n    position: 'fixed',\n    color: theme.palette.grey.A700,\n    height: '140px',\n    backgroundColor: '#fff',\n    [theme.breakpoints.down('sm')]: {\n      position: 'absolute',\n      padding: '2px 1rem',\n    },\n    '& span': {\n      display: 'block',\n    },\n  },\n  logoSpan: {\n    color: theme.palette.primary.main,\n    fontWeight: 700,\n  },\n  toolbar: {\n    ...theme.mixins.toolbar,\n    padding: '0 2rem',\n    [theme.breakpoints.down('sm')]: {\n      padding: '2px 1rem',\n    },\n  },\n  paper: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  iconCont: {\n    paddingRight: '1rem',\n    alignSelf: 'center',\n  },\n  icon: {\n    fontSize: '3rem',\n    color: theme.palette.primary.main,\n  },\n  menuFlex: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    color: theme.palette.grey[400],\n  },\n  activeLink: {\n    backgroundColor: theme.palette.secondary.light,\n    color: 'black',\n    borderRadius: '3px',\n    padding: '4px',\n  },\n  moreIconCont: {\n    paddingRight: 0,\n  },\n  buttonDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    [theme.breakpoints.down('sm')]: {\n      lineHeight: '1.5',\n      width: '100%',\n    },\n  },\n  listItemPersonal: {\n    color: theme.palette.secondary.main,\n    fontStyle: 'italic',\n  },\n  listItemRoot: {\n    color: theme.palette.primary.main,\n    '& .MuiSvgIcon-root': {\n      color: theme.palette.primary.main,\n    },\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light,\n      color: theme.palette.primary.dark,\n      '& .MuiSvgIcon-root': {\n        color: theme.palette.primary.dark,\n      },\n    },\n    '&.Mui-disabled': {\n      opacity: 1,\n    },\n    '&.Mui-selected': {\n      backgroundColor: theme.palette.primary.light,\n      color: theme.palette.primary.dark,\n      '& .MuiSvgIcon-root': {\n        color: theme.palette.primary.dark,\n      },\n      //for mobile drawer to increase specificity\n      '&:hover': {\n        color: theme.palette.primary.dark,\n        backgroundColor: theme.palette.primary.light,\n      },\n    }\n  },\n  \n  content: {\n    marginTop: '140px',\n    marginLeft: drawerWidth,\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: 0,\n      padding: theme.spacing(2),\n    },\n    '& main': {\n      paddingLeft: theme.spacing(1),\n      [theme.breakpoints.down('sm')]: {\n        marginLeft: 0,\n      },\n    },\n    '& footer': {\n      position: 'fixed',\n      bottom: 0,\n      width: `calc(100% - ${drawerWidth}px)`,\n      backgroundColor: theme.palette.primary.A700,\n      [theme.breakpoints.down('sm')]: {\n        position: 'relative',\n      },\n    },\n  },\n}));\n\nfunction Layout(props) {\n  const theme = useTheme();\n  const classes = useStyles();\n  const mainMenu = {\n    main: {\n      eng: 'Main',\n      name: 'Главная',\n    },\n    about: {\n      eng: 'About',\n      name: 'О нас',\n    },\n    specialits: {\n      eng: 'Specialists',\n      name: 'Специалисты',\n    },\n    prices: {\n      eng: 'Prices',\n      name: 'Цены',\n    },\n    news: {\n      eng: 'News',\n      name: 'Новости',\n    },\n    contacts: {\n      eng: 'Contacts',\n      name: 'Контакты',\n    },\n    cabinet: {\n      eng: 'Cabinet',\n      name: 'Личный кабинет',\n    },\n    get xs() {\n      return [];\n    },\n    get sm() {\n      return [this.main, this.cabinet];\n    },\n    get md() {\n      return this.xl;\n    },\n    /** lg and xl are equal */\n    get lg() {\n      return this.xl;\n    },\n    get xl() {\n      return [\n        this.main,\n        this.about,\n        this.specialits,\n        this.prices,\n        this.news,\n        this.contacts,\n        this.cabinet,\n      ];\n    },\n  };\n\n  function useWidth() {\n    const keys = [...theme.breakpoints.keys].reverse();\n    return (\n      keys.reduce((output, key) => {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const matches = useMediaQuery(theme.breakpoints.only(key));\n        return !output && matches ? key : output;\n      }, null) || 'xs'\n    );\n  }\n\n  /** handling main menu (MM) open, close */\n  const [mmOpen, setMMOpen] = useState(false);\n  const mmRef = React.useRef(null);\n  function handleMMToggle() {\n    setMMOpen((prevOpen) => !prevOpen);\n  }\n  function handleMMClose(event) {\n    if (mmRef.current && mmRef.current.contains(event.target)) {\n      return;\n    }\n    setMMOpen(false);\n  }\n\n  const currentWidth = useWidth();\n\n  const menuItems = mainMenu[currentWidth].map((item) => {\n    const classNameActive = item === mainMenu.cabinet ? 'activeLink' : null;\n    return (\n      <span key={item.eng} className={classes[classNameActive]}>\n        {item.name}\n      </span>\n    );\n  });\n  /** slide down main menu items */\n  const mmItems = mainMenu.xl.map((item) => {\n    if (mainMenu[currentWidth].includes(item)) return null;\n    else return <MenuItem key={item.eng} onClick={handleMMClose}>{item.name}</MenuItem>;\n  });\n\n  /** handling drawer */\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  }\n  /** handling selection of sidebar items */\n\n  const handleMenuClick = (path) => (e) => { \n    props.history.push(path);\n  };\n  const drawer = (\n    <List className={classes.list}>\n      <ListItem >\n        <ListItemAvatar>\n          <Avatar src={props.personalImage} />\n        </ListItemAvatar>\n        <ListItemText secondary={`${props.surname} ${props.firstName} ${props.middleName}`} className={classes.listItemPersonal} secondaryTypographyProps={{color: 'inherit'}}/>\n      </ListItem>\n      <ListItem\n        button\n        onClick={handleMenuClick('/')}\n        selected={props.location.pathname === '/'}\n        disabled={props.location.pathname === '/'}\n        className={classes.listItemRoot}\n      >\n        <ListItemIcon>\n          <Home color=\"primary\" />\n        </ListItemIcon>\n        <ListItemText primary='Кабинет' />\n      </ListItem>\n      <ListItem\n        button\n        onClick={handleMenuClick('/apptEditor')}\n        selected={props.location.pathname === '/apptEditor'}\n        disabled={props.location.pathname === '/apptEditor'}\n        className={classes.listItemRoot}\n      >\n        <ListItemIcon>\n          <Create />\n        </ListItemIcon>\n        <ListItemText primary='Записаться на прием к врачу' />\n      </ListItem>\n      <ListItem\n        button\n        onClick={handleMenuClick('/apptsList')}\n        selected={props.location.pathname === '/apptsList'}\n        disabled={props.location.pathname === '/apptsList'}\n        className={classes.listItemRoot}\n      >\n        <ListItemIcon>\n          <Ballot />\n        </ListItemIcon>\n        <ListItemText primary='Мои записи' />\n      </ListItem>\n      <ListItem\n        button\n        onClick={handleMenuClick('/personal')}\n        selected={props.location.pathname === '/personal'}\n        disabled={props.location.pathname === '/personal'}\n        className={classes.listItemRoot}\n      >\n        <ListItemIcon>\n          <Person />\n        </ListItemIcon>\n        <ListItemText primary='Личные данные' />\n      </ListItem>\n     \n    </List>\n  );\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={6} md={4} lg={3}>\n              <Paper className={classes.paper}>\n                {/* <Mood className={classes.icon} /> */}\n                <Logo />\n                <Typography variant='subtitle1' noWrap>\n                  <span>Медицинский центр</span>\n                  <span className={classes.logoSpan}>AMG-GROUP</span>\n                </Typography>\n              </Paper>\n            </Grid>\n            <Hidden xsDown>\n              <Grid item sm={6} md={4} lg={3}>\n                <Paper className={clsx(classes.paper)}>\n                  <Phone className={classes.icon} />\n                  <Typography variant='subtitle1' noWrap>\n                    <span>Телефон</span>\n                    <span>+7(495)123-45-67</span>\n                  </Typography>\n                </Paper>\n              </Grid>\n            </Hidden>\n            <Hidden smDown>\n              <Grid item md={4} lg={3}>\n                <Paper className={clsx(classes.paper)}>\n                  <Alarm className={clsx(classes.icon)} />\n                  <Typography variant='subtitle1' noWrap>\n                    <span>Часы работы</span>\n                    <span>8.00 - 20.00</span>\n                  </Typography>\n                </Paper>\n              </Grid>\n            </Hidden>\n            <Hidden mdDown>\n              <Grid item lg={3}>\n                <Paper className={clsx(classes.paper)}>\n                  <LocationOn className={classes.icon} />\n                  <Typography variant='subtitle1' noWrap>\n                    <span>МО, КОРОЛЕВ</span>\n                    <span>ПР-Т КОСМОНАВТОВ 15</span>\n                  </Typography>\n                </Paper>\n              </Grid>\n            </Hidden>\n          </Grid>\n        </Toolbar>\n        <Toolbar className={classes.toolbar}>\n          <Grid container spacing={3}>\n            <Hidden mdUp>\n              <Grid item xs={2} sm={2}>\n                <IconButton\n                  onClick={handleDrawerToggle}\n                  className={classes.iconCont}\n                >\n                  <Menu className={classes.icon} />\n                </IconButton>\n              </Grid>\n            </Hidden>\n            <Hidden xsDown>\n              <Grid item sm={5} md={9} lg={10} className={classes.menuFlex}>\n                {menuItems}\n              </Grid>\n            </Hidden>\n            <Hidden mdUp>\n              <Grid\n                item\n                xs={4}\n                sm={2}\n                className={clsx(classes.iconCont, classes.moreIconCont)}\n              >\n                <IconButton\n                  ref={mmRef}\n                  onClick={handleMMToggle}\n                  className={classes.iconCont}\n                >\n                  <MoreHoriz className={classes.icon} />\n                </IconButton>\n                <Popper\n                  open={mmOpen}\n                  anchorEl={mmRef.current}\n                  transition\n                  disablePortal\n                >\n                  {({ TransitionProps, placement }) => (\n                    <Grow\n                      {...TransitionProps}\n                      style={{\n                        transformOrigin:\n                          placement === 'bottom'\n                            ? 'center top'\n                            : 'center bottom',\n                      }}\n                    >\n                      <Paper>\n                        <ClickAwayListener onClickAway={handleMMClose}>\n                          <MenuList>{mmItems}</MenuList>\n                        </ClickAwayListener>\n                      </Paper>\n                    </Grow>\n                  )}\n                </Popper>\n              </Grid>\n            </Hidden>\n\n            <Grid\n              item\n              xs={6}\n              sm={3}\n              md={3}\n              lg={2}\n              className={classes.buttonDiv}\n            >\n              <Button\n                variant='outlined'\n                color='secondary'\n                size='small'\n                className={classes.button}\n                onClick={handleMenuClick('/apptEditor')}\n                disabled={props.location.pathname === '/apptEditor'}\n              >\n                <span>Записаться</span>\n                <span>на прием</span>\n              </Button>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label='Mailbox folders'>\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden mdUp implementation='css'>\n          <Drawer\n            variant='temporary'\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerModalPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden smDown implementation='css'>\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant='permanent'\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <div className={classes.content}>\n        <main>{props.children}</main>\n        {/* <footer className={classes.footer}>\n          \n        </footer> */}\n      </div>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    personalImage: state.personalImage,\n    surname: state.personalData.surname,\n    firstName: state.personalData.firstName,\n    middleName: state.personalData.middleName,\n  };\n};\n\nexport default connect(\n  mapStateToProps\n)(withRouter(Layout));\n","import React, { Fragment } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nconst styleSheet = (theme) => ({\n  btnYes: {\n    color: (props) => props.btnYesColor ? props.btnYesColor : theme.palette.primary.main,\n  },\n  actionsDiv: {\n    justifyContent: 'center',\n  },\n \n});\n\nconst DialogAlertMUI = (props) => {\n  const {\n    classes,\n    children,\n    renderBtnOpen,\n    title,\n    yesHandler,\n    btnNoName,\n    btnYesName,\n  } = props;\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  const handleClose = (triggerYesHandler) => () => {\n    setOpen(false);\n    if (triggerYesHandler) yesHandler();\n  }\n\n  return (\n    <Fragment>\n      {renderBtnOpen(handleClickOpen)}\n      <Dialog\n        open={open}\n        onClose={handleClose(false)}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title' disableTypography>\n        <Typography align=\"center\" variant=\"h5\">\n          {title}\n        </Typography>\n        \n        </DialogTitle>\n        <DialogContent>{children}</DialogContent>\n        <DialogActions className={classes.actionsDiv}>\n          <Button onClick={handleClose(false)} color='primary' autoFocus>\n            {btnNoName}\n          </Button>\n          <Button onClick={handleClose(true)} className={classes.btnYes}>\n          {btnYesName}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Fragment>\n  );\n};\n\nDialogAlertMUI.propTypes = {\n  renderBtnOpen: PropTypes.func.isRequired,\n  title: PropTypes.node.isRequired,\n  yesHandler: PropTypes.func.isRequired,\n  btnNoName: PropTypes.string.isRequired,\n  btnYesName: PropTypes.string.isRequired,\n  btnYesColor: PropTypes.string,\n};\n\nexport default withStyles(styleSheet)(DialogAlertMUI);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Delete, Create } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\n\nimport DialogAlertMUI from '../UI/DialogAlertMUI';\n\nconst styleSheet = (theme) => ({\n  LineCont: {\n    display: 'flex',\n    fontSize: '1.2rem',\n    flexWrap: 'nowrap',\n    '&:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  TextCont: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n  },\n  TextItem: {\n    '&:not(:last-child)': {\n      paddingRight: theme.spacing(1),\n    },\n    '&:first-child': {\n      fontWeight: 'bold',\n    },\n  },\n  Active: {\n    color: theme.palette.primary.main,\n  },\n  Past: {\n    color: theme.palette.grey[600],\n  },\n  ButtsCont: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nclass ApptsListLine extends Component {\n  dialogYesHandler = () => {\n    this.props.deleteApptHandler(this.props.appt.apptId);\n  };\n\n  render() {\n    const { appt, classes, apptStatus } = this.props;\n    let buttonBlock;\n    if (this.props.showButtons && this.props.apptStatus === 'Active') {\n      buttonBlock = (\n        <div className={classes.ButtsCont}>\n          <div>\n            <IconButton\n              color='secondary'\n              onClick={(e) => this.props.editApptHandler(e, appt.apptId)}\n            >\n              <Create />\n            </IconButton>\n          </div>\n          <div>\n            <DialogAlertMUI\n              renderBtnOpen={(handleClickOpen) => (\n                <IconButton color='secondary' onClick={handleClickOpen}>\n                  <Delete />\n                </IconButton>\n              )}\n              title='Отмена записи'\n              yesHandler={this.dialogYesHandler}\n              btnNoName='Нет'\n              btnYesName='Да, отменить!'\n              btnYesColor=\"red\"\n            >\n              <Fragment>\n                <div>Подтвердите отмену записи к врачу.</div>\n                <div>Номер талона: {appt.apptId}</div>\n            <div>\n              Дата: {appt.date\n                .split('-')\n                .reverse()\n                .join('.')}\n            </div>\n            <div>Время: {appt.time}</div>\n            <div>Врач: {appt.speciality.toLowerCase()}</div>\n            <div>{appt.docFullName}</div>\n              </Fragment>\n            </DialogAlertMUI>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <Fragment>\n        <div className={classes.LineCont}>\n          <div className={clsx(classes.TextCont, classes[apptStatus])}>\n            <div className={classes.TextItem}>{appt.apptId}</div>\n            <div className={classes.TextItem}>\n              {appt.date\n                .split('-')\n                .reverse()\n                .join('.')}\n            </div>\n            <div className={classes.TextItem}>{appt.time}</div>\n            <div className={classes.TextItem}>{appt.speciality}</div>\n            <div className={classes.TextItem}>{appt.docFullName}</div>\n          </div>\n\n          {buttonBlock}\n        </div>\n        \n      </Fragment>\n    );\n  }\n}\n\nApptsListLine.propTypes = {\n  appt: PropTypes.object,\n  deleteApptHandler: PropTypes.func,\n  editApptHandler: PropTypes.func,\n  apptStatus: PropTypes.oneOf(['Active', 'Past']),\n  showButtons: PropTypes.bool,\n};\n\nexport default withStyles(styleSheet)(ApptsListLine);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Calendar from 'react-calendar';\nimport styles from './Calendar.module.scss';\n\nclass ReactCalendar extends Component {\n  state = {\n    date: new Date(),\n    currDateString: () => {\n      const today = new Date();\n      return `${today.getFullYear().toString()} ${(today.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')} ${today\n        .getDate()\n        .toString()\n        .padStart(2, '0')}`;\n    },\n    locale: 'ru',\n    apptDates: [],\n  };\n\n  tileDisabled = ({ activeStartDate, date, view }) => {\n    const dateString = `${date.getFullYear().toString()} ${(date.getMonth() + 1)\n      .toString()\n      .padStart(2, '0')} ${date\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n    return dateString < this.state.currDateString();\n  };\n\n  tileClassName = () => ({ date, view }) => {\n    let style = null;\n    const dateString = `${date.getFullYear().toString()} ${(date.getMonth() + 1)\n      .toString()\n      .padStart(2, '0')} ${date\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n    if (view === 'month') {\n      if (dateString === this.state.currDateString()) {\n        style = styles.Today;\n      }\n    }\n    if (this.state.apptDates.length > 0) {\n      this.state.apptDates.forEach((apptDate) => {\n        if (dateString === apptDate) style = styles.Appt;\n      })\n    }\n\n    return style;\n  };\n\n  componentDidMount() {\n    if (this.props.appts) {\n      const apptDates = [];\n      this.props.appts.forEach((item) => {\n        const itemDateString = item.date.split('-').join(' ');\n        if (itemDateString >= this.state.currDateString()) apptDates.push(itemDateString);\n      });\n      this.setState({\n        apptDates,\n      })\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.appts && (prevProps.appts !== this.props.appts)) {\n      const apptDates = [];\n      this.props.appts.forEach((item) => {\n        const itemDateString = item.date.split('-').join(' ');\n        if (itemDateString >= this.state.currDateString()) apptDates.push(itemDateString);\n      });\n      this.setState({\n        apptDates,\n      })\n    }\n  }\n\n  render() {\n    return (\n      <Calendar\n        value={this.state.date}\n        locale={this.state.locale}\n        className={[styles.CustomCalendar]}\n        maxDetail='month'\n        tileDisabled={this.tileDisabled}\n        tileClassName={this.tileClassName()}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    appts: state.appts,\n  };\n};\n\nexport default connect(mapStateToProps)(ReactCalendar);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport styles from './Dash.module.scss';\nimport ApptsListLine from '../ApptsList/ApptsListLine';\nimport ReactCalendar from '../Calendar/Calendar';\n\nclass Dash extends Component {\n  state = {\n    filterThresh: moment().format('YYYY-MM-DD'),\n  };\n\n  clickHandler = (e, path) => {\n    this.props.history.push(path);\n  }\n\n\n  render() {\n    /** active appointments */\n    let apptsContents, apptsList;\n    if (!this.props.appts || this.props.appts.length === 0) {\n      apptsContents = 'Запланированные записи отстутствуют';\n    } else {\n      apptsList = this.props.appts.filter((item) => {\n        return item.dateTime > this.state.filterThresh;\n      });\n      if (apptsList.length === 0) {\n        apptsContents = 'Запланированные записи отстутствуют';\n      } else {\n        apptsContents = apptsList.map((item) => {\n          return (\n            <ApptsListLine\n              key={item.docDateTime}\n              appt={item}\n              showButtons={false}\n              apptStatus={\n                item.dateTime > this.state.filterThresh ? 'Active' : 'Past'\n              }\n            />\n          );\n        });\n      }\n    }\n\n    return (\n      <Fragment>\n        <div onClick={(e) => this.clickHandler(e, '/apptsList')} className={styles.Section}>\n          <h2>Запланированные записи</h2>\n          {apptsContents}\n        </div>\n        <div className={styles.Calendar}>\n          <ReactCalendar />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nDash.propTypes = {};\n\nconst mapStateToProps = (state) => {\n  return {\n    appts: state.appts,\n  };\n};\n\nexport default connect(mapStateToProps)(Dash);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: (props) =>\n      props.selected ? theme.palette.primary.light : null,\n\n    color: (props) =>\n      props.selected ? theme.palette.primary.dark : theme.palette.primary.main,\n    fontWeight: (props) => (props.selected ? 700 : 400),\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light,\n      color: theme.palette.primary.dark,\n    },\n    '&.Mui-disabled': {\n      backgroundColor: (props) =>\n        props.selected ? theme.palette.primary.light : null,\n      color: (props) =>\n        props.selected ? theme.palette.primary.dark : 'rgba(0, 0, 0, 0.26)',\n    },\n  },\n}));\n\nfunction SelectableButton(props) {\n  const { selected, ...other } = props;\n  const classes = useStyles(props);\n  return <Button className={classes.root} {...other} />;\n}\n\nexport default SelectableButton;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\n\nimport SelectableButton from '../UI/SelectableButton';\n\nconst styleSheet = (theme) => ({\n  BtnItem: {\n    '&:not(:last-child)': {\n      paddingRight: theme.spacing(1),\n    },\n  },\n});\n\nconst ApptProgress = ({\n  classes,\n  stageChangeHandler,\n  activeStage: { type, next, prev },\n}) => {\n  let btn1Name = '1. ВЫБЕРИТЕ ВРАЧА',\n    btn2Name = '2. ВЫБЕРИТЕ ДАТУ И ВРЕМЯ',\n    btn3Name = '3. ПОДТВЕРДИТЕ ЗАПИСЬ';\n  let btn1Selected = true,\n    btn2Selected = false,\n    btn3Selected = false;\n  let btn1Disabled = false,\n    btn2Disabled = true,\n    btn3Disabled = true;\n  if (type === 'specialities' || type === 'doctors') {\n    btn1Disabled = true;\n    btn2Disabled = !next;\n  }\n  if (type === 'schedule' || type === 'confirm' || type === 'confirmed') {\n    btn1Selected = false;\n    btn1Name = '1. ВЕРНУТЬСЯ К ВЫБОРУ ВРАЧА';\n    if (type === 'schedule') {\n      btn2Disabled = true;\n      btn3Disabled = !next;\n      btn2Selected = true;\n    }\n    if (type === 'confirm') {\n      btn2Disabled = false;\n      btn1Selected = false;\n      btn3Selected = true;\n      btn2Name = '2. ВЕРНУТЬСЯ К ВЫБОРУ ДАТЫ И ВРЕМЕНИ';\n    }\n    if (type === 'confirmed') {\n      btn1Name = '1. ВЫБЕРИТЕ ВРАЧА';\n      btn1Selected = false;\n      btn3Selected = true;\n      btn3Name = '3. ЗАПИСЬ ПОДТВЕРЖДЕНА';\n    }\n  }\n  return (\n    <Fragment>\n      <div className={classes.BtnItem}>\n        <SelectableButton\n          color='primary'\n          variant='outlined'\n          onClick={(e) => stageChangeHandler(e, 'specialities')}\n          selected={btn1Selected}\n          disabled={btn1Disabled}\n        >\n          {btn1Name}\n        </SelectableButton>\n      </div>\n      <div className={classes.BtnItem}>\n        <SelectableButton\n          color='primary'\n          variant='outlined'\n          onClick={(e) => stageChangeHandler(e, 'schedule')}\n          selected={btn2Selected}\n          disabled={btn2Disabled}\n        >\n          {btn2Name}\n        </SelectableButton>\n      </div>\n      <div className={classes.BtnItem}>\n        <SelectableButton\n          color='primary'\n          variant='outlined'\n          onClick={(e) => stageChangeHandler(e, 'confirm')}\n          selected={btn3Selected}\n          disabled={btn3Disabled}\n        >\n          {btn3Name}\n        </SelectableButton>\n      </div>\n    </Fragment>\n  );\n};\n\nApptProgress.propTypes = {\n  activeStage: PropTypes.object.isRequired,\n  stageChangeHandler: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styleSheet)(ApptProgress);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './SelectableSpan.module.scss';\n\nconst SelectableSpan = ({classNames, selected, title, clickHandler, children}) => {\n  return (\n    <span className={clsx(styles.Span, selected && styles.Selected, classNames)} onClick={clickHandler} title={title}>\n      {children}\n    </span>\n  );\n};\n\nSelectableSpan.propTypes = {\n  selected: PropTypes.bool.isRequired,\n  title: PropTypes.string,\n  clickHandler: PropTypes.func.isRequired,\n  children: PropTypes.string.isRequired,\n  classNames: PropTypes.string,\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.selected === nextProps.selected) return true;\n  else return false;\n}\n\nexport default React.memo(SelectableSpan, areEqual);","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ApptSpecialities.module.scss';\nimport SelectableSpan from '../UI/SelectableSpan';\n\n\nconst ApptSpecialities = (props) => {\n  /** building contents from Map */\n  let Contents = {};\n  Contents.adult = [];\n  Contents.child = [];\n  props.specialities.forEach((spec, id) => {\n    if (!spec.visible) return;\n    Contents[spec.ageCategory].push(\n      <div className={styles.Item} key={id}>\n        <SelectableSpan\n          classNames={styles.Span}\n          selected={spec.selected}\n          title={spec.details}\n          clickHandler={(e) => props.selectHandler(e, id)}\n        >\n          {spec.title}\n        </SelectableSpan>\n        <span className={styles.BtnSpan}>{props.children(spec.selected)}</span>\n      </div>\n    );\n  });\n\n  return (\n    <Fragment>\n      <div className={styles.Department}>\n        <h2 className={styles.Header}>Специальности взрослого отделения</h2>\n        <div className={styles.Contents}>{Contents.adult}</div>\n      </div>\n      <div className={styles.Department}>\n        <h2 className={styles.Header}>Специальности детского отделения</h2>\n        <div className={styles.Contents}>{Contents.child}</div>\n      </div>\n    </Fragment>\n  );\n};\n\nApptSpecialities.propTypes = {\n  specialities: PropTypes.instanceOf(Map).isRequired,\n  selectHandler: PropTypes.func.isRequired,\n};\n\nexport default ApptSpecialities;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport docMaleImage from '../../images/docMale.jpg';\nimport docFemaleImage from '../../images/docFemale.jpg';\nimport styles from './ApptDoctors.module.scss';\nimport SelectableSpan from '../UI/SelectableSpan';\n\nconst ApptDoctors = (props) => {\n  let contents = [];\n\n  props.doctors.forEach((item, id) => {\n    if (!item.visible) return;\n    const imgSrc = item.gender === 'male' ? docMaleImage : docFemaleImage;\n    contents.push(\n      <div onClick={(e) => props.selectHandler(e, id)} className={clsx(styles.Paper, styles.PaperHover)} key={id}>\n        <div className={styles.FotoCont}>\n          <img\n            alt=\"\"\n            width={100}\n            src={imgSrc}\n          />\n        </div>\n        <div className={styles.DetailsCont}>\n          <div className={styles.FullName}>\n            <SelectableSpan\n              classNames={styles.FullName}\n              selected={item.selected}\n              clickHandler={(e) => props.selectHandler(e, id)}\n            >\n              {item.fullName}\n            </SelectableSpan>\n            \n          </div>\n\n          <div\n            className={styles.Speciality}\n          >\n            {props.specialities.get(item.speciality).title}\n          </div>\n          <div\n            className={styles.Experience}\n          >\n            (стаж {item.experience})\n          </div>\n          <div\n            className={styles.Price}\n          >\n            Стоимость приема 2000 руб.\n          </div>\n        </div>\n        <div className={styles.Next}>\n          <span>{props.children(item.selected)}</span>\n        </div>\n        \n      </div>\n    );\n  });\n  return <div className={styles.ApptDoctors}>{contents}</div>;\n};\n\nApptDoctors.propTypes = {\n  specialities: PropTypes.instanceOf(Map).isRequired,\n  doctors: PropTypes.instanceOf(Map).isRequired,\n  selectHandler: PropTypes.func.isRequired,\n};\n\nexport default ApptDoctors;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SelectableButton from '../UI/SelectableButton';\nimport { withStyles } from '@material-ui/styles';\n\nconst styleSheet = (theme) => ({\n  BtnItem: {\n    '&:not(:last-child)': {\n      paddingRight: theme.spacing(1),\n    },\n  },\n});\n\nconst ApptSpecSwitch = (props) => {\n  let selectedSpecialities = false;\n  let selectedDoctors = false;\n  if (props.alt === 'specialities') {\n    selectedSpecialities = true;\n  } else if (props.alt === 'doctors') {\n    selectedDoctors = true;\n  }\n\n  return (\n    <Fragment>\n      <div className={props.classes.BtnItem}>\n        <SelectableButton\n          color='primary'\n          variant='outlined'\n          size='small'\n          onClick={(e) => props.switchHandler(e, 'specialities')}\n          selected={selectedSpecialities}\n        >\n          По специальности\n        </SelectableButton>\n      </div>\n      <div className={props.classes.BtnItem}>\n        <SelectableButton\n          color='primary'\n          variant='outlined'\n          size='small'\n          onClick={(e) => props.switchHandler(e, 'doctors')}\n          selected={selectedDoctors}\n        >\n          По Ф.И.О. врача\n        </SelectableButton>\n      </div>\n    </Fragment>\n  );\n};\n\nApptSpecSwitch.propTypes = {\n  switchHandler: PropTypes.func.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styleSheet)(ApptSpecSwitch);\n","import React from 'react';\nimport { Button as ButtonMUI } from '@material-ui/core';\n\nimport styles from './ApptDoctors.module.scss';\nimport docMaleImage from '../../images/docMale.jpg';\nimport docFemaleImage from '../../images/docFemale.jpg';\n\nconst ApptSchDoc = (props) => {\n  const imgSrc = props.doctor.gender === 'male' ? docMaleImage : docFemaleImage;\n  return (\n    <div className={styles.Paper}>\n      <div className={styles.FotoCont}>\n        <img alt=\"\" width={100} src={imgSrc} />\n      </div>\n      <div className={styles.DetailsCont}>\n        <div className={styles.FullName}>{props.doctor.fullName}</div>\n\n        <div className={styles.Speciality}>{props.docSpeciality.title}</div>\n        <div className={styles.Experience}>\n          (стаж {props.doctor.experience})\n        </div>\n        <div className={styles.Price}>Стоимость приема 2000 руб.</div>\n      </div>\n\n      <div className={styles.SchCont}>\n        <div className={styles.DatesCont}>{props.children()}</div>\n        <div className={styles.BtnDiv}>\n          <ButtonMUI\n            disableRipple\n            color='secondary'\n            size='medium'\n            disabled={props.btnDisabled}\n            onClick={(e) => props.stageChangeHandler(e, 'confirm')}\n          >\n            Перейти к подтверждению\n          </ButtonMUI>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ApptSchDoc;\n","import React from 'react';\n\nimport styles from './ApptDoctors.module.scss';\nimport SelectableSpan from '../UI/SelectableSpan';\n\nconst ApptSchDate = (props) => {\n  return (\n    <div className={styles.DateLine}>\n      <div className={styles.Date}>{props.date\n                .split('-')\n                .reverse()\n                .join('.')}</div>\n      <div className={styles.Time}>\n        {props.timeSlots.map((timeSlot) => {\n          return (\n            <SelectableSpan\n              selected={timeSlot.selected}\n              key={timeSlot.docDateTime}\n              clickHandler={(e) => props.selectHandler(e, timeSlot.docDateTime)}\n            >\n              {timeSlot.time}\n            </SelectableSpan>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ApptSchDate;\n","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\n\nimport ApptSchDoc from './ApptSchDoc';\nimport ApptSchDate from './ApptSchDate';\n\nconst ApptSchedule = ({\n  docDateTime,\n  btnName,\n  stageChangeHandler,\n  btnDisabled,\n  doctorId,\n  doctors,\n  schedule,\n  specialities,\n  selectHandler,\n}) => {\n  const schByDoc = {};\n  /** making array byDoc and by Date */\n  for (const doc of doctorId) {\n    schByDoc[doc] = {};\n    schByDoc[doc].dateSet = new Set();\n    schedule.forEach((mapValue, docDateTime) => {\n      if (mapValue.doctorId === doc) {\n        if (!schByDoc[doc][mapValue.date]) schByDoc[doc][mapValue.date] = [];\n        schByDoc[doc][mapValue.date].push({\n          docDateTime,\n          time: mapValue.time,\n          selected: mapValue.selected,\n        });\n        schByDoc[doc].dateSet.add(mapValue.date);\n      }\n    });\n  }\n\n  const page = doctorId.map((doc) => {\n    let btnDocDisabled = btnDisabled;\n    if (!!docDateTime) {\n      const docId = docDateTime.slice(0, 4);\n      if (doc !== docId) {\n        btnDocDisabled = true;\n      }\n    }\n    return (\n      <ApptSchDoc\n        btnName={btnName}\n        btnDisabled={btnDocDisabled}\n        stageChangeHandler={stageChangeHandler}\n        key={doc}\n        doctor={doctors.get(doc)}\n        docSpeciality={specialities.get(doctors.get(doc).speciality)}\n      >\n        {() => {\n          return Array.from(schByDoc[doc].dateSet, (date) => {\n            return (\n              <ApptSchDate\n                key={`${doc} ${date}`}\n                selectHandler={selectHandler}\n                date={date}\n                timeSlots={schByDoc[doc][date]}\n              />\n            );\n          });\n        }}\n      </ApptSchDoc>\n    );\n  });\n\n  return <Fragment>{page}</Fragment>;\n};\n\nApptSchedule.propTypes = {\n  doctorId: PropTypes.arrayOf(PropTypes.string.isRequired),\n  doctors: PropTypes.instanceOf(Map).isRequired,\n  schedule: PropTypes.instanceOf(Map).isRequired,\n  specialities: PropTypes.instanceOf(Map).isRequired,\n};\n\nexport default ApptSchedule;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './ApptConfirm.module.scss';\n\nconst ApptConfirm = ({\n  children,\n  activeStage,\n  docDateTime,\n  doctors,\n  specialities,\n  apptId,\n  newAppt,\n}) => {\n  let confirmedMsg, docFullName, docSpeciality, date, time, btnName;\n  if (activeStage.type === 'confirm') {\n    confirmedMsg = (\n      <div className={clsx(styles.GridItem, styles.Confirm)}>\n        Подтвердите запись\n      </div>\n    );\n    const docId = docDateTime.slice(0, 4);\n    docFullName = doctors.get(docId).fullName;\n    docSpeciality = specialities.get(doctors.get(docId).speciality).title;\n    date = docDateTime\n      .slice(5, 15)\n      .split('-')\n      .reverse()\n      .join('.');\n    time = docDateTime.slice(16, 21);\n\n    btnName = 'ПОДТВЕРЖДАЮ';\n  } else {\n    docFullName = newAppt.docFullName;\n    docSpeciality = newAppt.Speciality;\n    date = newAppt.date\n      .split('-')\n      .reverse()\n      .join('.');\n    time = newAppt.time;\n    confirmedMsg = (\n      <Fragment>\n        <div className={clsx(styles.GridItem, styles.Confirm)}>\n          Ваша запись подтверждена!\n        </div>\n        <h3 className={clsx(styles.GridItem, styles.Header)}>\n          Талон № {newAppt.apptId}\n        </h3>\n      </Fragment>\n    );\n    btnName = 'ДОБАВИТЬ НОВУЮ ЗАПИСЬ';\n  }\n\n  return (\n    <div className={styles.Paper}>\n      {confirmedMsg}\n      <div className={clsx(styles.GridItem, styles.Speciality)}>\n        {docSpeciality}\n      </div>\n      <div className={clsx(styles.GridItem, styles.FullName)}>\n        {docFullName}\n      </div>\n      <div className={clsx(styles.GridItem, styles.DateTime)}>\n        <span className={styles.Attr}>Дата:</span>\n        <span>{date}</span>\n        \n      </div>\n      <div className={clsx(styles.GridItem, styles.DateTime)}>\n        <span className={styles.Attr}>Время:</span><span>{time}</span> \n      </div>\n      <div className={clsx(styles.GridItem, styles.Price)}>\n      <span className={styles.Attr}>Стоимость:</span><span>2000 руб.</span>\n      </div>\n      <div className={clsx(styles.GridItem, styles.BtnDiv)}>\n        {children(btnName)}\n      </div>\n    </div>\n  );\n};\n\nApptConfirm.propTypes = {\n  activeStage: PropTypes.object.isRequired,\n  doctorId: PropTypes.arrayOf(PropTypes.string),\n  docDateTime: PropTypes.string,\n  doctors: PropTypes.instanceOf(Map),\n  schedule: PropTypes.instanceOf(Map),\n  specialities: PropTypes.instanceOf(Map),\n  apptId: PropTypes.string,\n  newAppt: PropTypes.object,\n};\n\nexport default ApptConfirm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { InputAdornment, TextField } from '@material-ui/core';\nimport { Search as SearchIcon } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 0,\n  },\n}));\n\nconst Search = (props) => {\n  const classes = useStyles();\n\n  const searchPreProcessor = (e) => {\n    /** preprocessing searchstring to match cyrillic letters with whitespaces only */\n    const regexp = /[\\u0430-\\u044f\\s]+/gi;\n    const interim = e.target.value.match(regexp);\n    let refined = '';\n    if (interim && interim[0] !== ' ') {\n      refined = interim.join('').replace(/\\s{2,}/g, ' ');\n    }\n    props.changeSearchHandler(refined);\n  };\n\n  return (\n    <TextField\n      className={clsx(classes.root)}\n      variant='outlined'\n      label={props.label}\n      color='primary'\n      margin='dense'\n      placeholder={props.placeholder}\n      value={props.value}\n      onChange={searchPreProcessor}\n      helperText={props.helperText}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position='end'>\n            <SearchIcon />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n\nSearch.propTypes = {\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  changeSearchHandler: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Spinner.module.scss';\n\nconst Spinner = props => {\n  return (\n    <div className={styles.Spinner}>\n      Загружаются {props.contentType}. Подождите пожалуйста ...\n    </div>\n  );\n};\n\nSpinner.propTypes = {\n  contentType: PropTypes.string.isRequired\n};\n\nexport default Spinner;","const specialities = [\n  {\n    id: 's001',\n    title: 'Терапевт',\n    details: 'Терапевт - врач общей практики. Специализируется на терапии.',\n    ageCategory: 'adult',\n  },\n  {\n    id: 's002',\n    title: 'Хирург',\n    details: 'Наши хирурги - настоящие мясники, влюбленные в свое дело.',\n    ageCategory: 'adult',\n  },\n  {\n    id: 's003',\n    title: 'Манульный терапевт',\n    details: 'Мануальный терапевт - тот же терапевт, но только мануальный',\n    ageCategory: 'adult',\n  },\n  {\n    id: 's004',\n    title: 'Терапевт детский',\n    details:\n      'Терапевт - врач общей практики. Специализируется на детской терапии',\n    ageCategory: 'child',\n  },\n  {\n    id: 's005',\n    title: 'Хирург детский',\n    details:\n      'Наши детские хирурги - настоящие мясники, влюбленные в свое дело.',\n    ageCategory: 'child',\n  },\n  {\n    id: 's006',\n    title: 'Кардиохирург нетрадицонной медицины',\n    details:\n      'Наши детские хирурги - настоящие мясники, влюбленные в свое дело.',\n    ageCategory: 'adult',\n  },\n  {\n    id: 's007',\n    title: 'Уролог нетрадицонной ориентации',\n    details:\n      'Наши детские хирурги - настоящие мясники, влюбленные в свое дело.',\n    ageCategory: 'adult',\n  },\n  {\n    id: 's008',\n    title: 'Физиотерапевт',\n    details:\n      'Наши детские хирурги - настоящие мясники, влюбленные в свое дело.',\n    ageCategory: 'adult',\n  },\n  {\n    id: 's009',\n    title: 'Врач выписывальщик справок',\n    details:\n      'Наши детские хирурги - настоящие мясники, влюбленные в свое дело.',\n    ageCategory: 'adult',\n  },\n];\n\nexport default specialities;\n","const doctors = [\n  {\n    id: 'd001',\n    firstName: 'Мария',\n    middleName: 'Петровна',\n    surname: 'Иванова',\n    speciality: 's001',\n    gender: 'female',\n    experience: '15 лет',\n    priceCoeff: 1.3,\n    picture: '', //dynamic 'images/'+ '001' + 'small' or 'big' + 'jpg'\n    details:\n      'Более 15 лет трудилась на нелегом поприще терапии. Заслуженный врач Москвы. Специализируется на терапии головы и предголовья',\n  },\n  {\n    id: 'd002',\n    firstName: 'Наталья',\n    middleName: 'Ивановна',\n    surname: 'Кабанова',\n    speciality: 's001',\n    gender: 'female',\n    experience: '7 лет',\n    priceCoeff: 1,\n    picture: '', //dynamic 'images/'+ '001' + 'small' or 'big' + 'jpg'\n    details:\n      'Более 7 лет трудилась на нелегом поприще терапии. Заслуженный врач Щелково. Специализируется на терапии ',\n  },\n  {\n    id: 'd003',\n    firstName: 'Иван',\n    middleName: 'Николаевич',\n    surname: 'Мясников',\n    speciality: 's002',\n    gender: 'male',\n    experience: '8 лет',\n    priceCoeff: 1.2,\n    picture: '', //dynamic 'images/'+ '001' + 'small' or 'big' + 'jpg'\n    details:\n      'Более 8 лет трудился на нелегом поприще хирургии. Специализируется на удалении прыщей',\n  },\n  {\n    id: 'd004',\n    firstName: 'Бирджабек',\n    middleName: 'Галигбекович',\n    surname: 'Таджикистанов',\n    speciality: 's003',\n    gender: 'male',\n    experience: '10 лет',\n    priceCoeff: 1,\n    picture: '', //dynamic 'images/'+ '001' + 'small' or 'big' + 'jpg'\n    details:\n      'Более 10 лет мануальной терапии в багаже знаний и опыта этого непревзойденного специалиста из солнечного Таджикистана',\n  },\n  {\n    id: 'd005',\n    firstName: 'Капитолина',\n    middleName: 'Эдуардовна',\n    surname: 'Хрустикова',\n    speciality: 's004',\n    gender: 'female',\n    experience: '12 лет',\n    priceCoeff: 1,\n    picture: '', //dynamic 'images/'+ '001' + 'small' or 'big' + 'jpg'\n    details:\n      'Более 12 лет педиатрии и детской терапии',\n  },\n  {\n    id: 'd006',\n    firstName: 'Петр',\n    middleName: 'Григорьевич',\n    surname: 'Александров',\n    speciality: 's005',\n    gender: 'male',\n    experience: '11 лет',\n    priceCoeff: 1,\n    picture: '', //dynamic 'images/'+ '001' + 'small' or 'big' + 'jpg'\n    details:\n      'Более 11 лет на поприще десткой хирургии',\n  },\n];\n\nexport default doctors;","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { withStyles } from '@material-ui/styles';\nimport { ArrowBack, ArrowForward } from '@material-ui/icons';\nimport { Button as ButtonMUI, IconButton } from '@material-ui/core';\n\nimport { fetchScheduleGen, fetchAppts, editAppt } from '../../actions/actions';\nimport ApptProgress from './ApptProgress';\nimport ApptSpecialities from './ApptSpecialities';\nimport ApptDoctors from './ApptDoctors';\nimport ApptSpecSwitch from './ApptSpecSwitch';\nimport ApptSchedule from './ApptSchedule';\nimport ApptConfirm from './ApptConfirm';\nimport Search from '../UI/Search';\nimport Spinner from '../UI/Spinner';\nimport arraySortByProp from '../../utils/arraySortByProp';\nimport dataSpecialities from '../../data/dataSpecialities';\nimport dataDoctors from '../../data/dataDoctors';\n\nconst styleSheet = (theme) => ({\n  MB1: {\n    marginBottom: theme.spacing(0.5),\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  Search: {\n    marginLeft: 'auto',\n  },\n  MB2: {\n    //next and prev buttons - sticky above footer\n    position: 'sticky',\n    bottom: theme.spacing(1),\n    display: 'flex',\n    margin: '0 auto',\n    width: '80%',\n    color: '#f42ab5',\n  },\n  BtnForw: {\n    marginLeft: 'auto',\n  },\n  BtnBack: {},\n});\n\nclass ApptEditor extends Component {\n  state = {\n    stages: {\n      specialities: {\n        next: 'schedule',\n      },\n      doctors: {\n        next: 'schedule',\n      },\n      schedule: {\n        next: 'confirm',\n        prev: 'specialities',\n      },\n      confirm: {\n        prev: 'schedule',\n        next: 'confirmed',\n      },\n      confirmed: {\n        next: 'specialities',\n      },\n    },\n    activeStage: {\n      type: this.props.activeStage,\n      btnNameNext: 'Далее',\n      next: !!this.props.SpecialityId, //ok to go to next stage\n      prev: true, //ok to go one stage back\n    },\n    search: {\n      value: '',\n      empty: true,\n      disabled: true,\n    },\n    prevApptId: this.props.prevApptId, //string\n    doctorId: [this.props.doctorId], //Array - maybe two doctors\n    specialityId: this.props.SpecialityId, //string\n    docDateTime: this.props.docDateTime, //string 'd001 2018-09-05 18:20'\n    loading: true,\n    specialities: undefined, //map see docs\n    doctors: undefined, //map see docs\n    schedule: undefined, //map for selected doctors see docs\n    newAppt: undefined, //object undefined up until confirm-confirmed, then is a new/updated element of appts\n  };\n\n  changeSearchHandler = (refined) => {\n    const search = { ...this.state.search };\n    search.value = refined;\n    search.empty = !Boolean(refined.length);\n    /** refining Map for searched */\n    let newMap = new Map(this.state[this.state.activeStage.type]);\n    let currId;\n    let activeStage;\n    if (this.state.activeStage.type === 'specialities') {\n      currId = this.state.specialityId;\n      ({ newMap, currId, activeStage } = this.searchProcessor(\n        newMap,\n        currId,\n        refined\n      ));\n      this.setState({\n        specialities: newMap,\n        specialityId: currId,\n        activeStage,\n        search,\n      });\n    } else if (this.state.activeStage.type === 'doctors') {\n      currId = this.state.doctorId[0];\n      ({ newMap, currId, activeStage } = this.searchProcessor(\n        newMap,\n        currId,\n        refined\n      ));\n      const doctorId = [currId];\n      this.setState({\n        doctors: newMap,\n        doctorId,\n        activeStage,\n        search,\n      });\n    }\n  };\n\n  searchProcessor(newMap, currId = undefined, term = '') {\n    const searchTerm = term.toLowerCase();\n    newMap.forEach((el, key) => {\n      if (searchTerm.length === 0 || el.searchString.indexOf(searchTerm) > -1) {\n        if (el.visible === false) {\n          const newEl = { ...el, visible: true };\n          newMap.set(key, newEl);\n        }\n      } else if (el.visible === true) {\n        /** change el visibility to false */\n        const newEl = { ...el, visible: false };\n        if (currId === key) {\n          currId = undefined;\n          newEl.selected = false;\n        }\n        newMap.set(key, newEl);\n        /** if element was selected and gets out of search scope - undefine it */\n      }\n    });\n\n    const activeStage = { ...this.state.activeStage, next: !!currId };\n    return {\n      newMap,\n      currId,\n      activeStage,\n    };\n  }\n\n  selectHandler = (e, id) => {\n    let newMap = new Map(this.state[this.state.activeStage.type]);\n    let newId = id;\n    let activeStage, prevId;\n    switch (this.state.activeStage.type) {\n      case 'specialities':\n        prevId = this.state.specialityId;\n        ({ newMap, newId, activeStage } = this.selectProcessor(\n          newMap,\n          newId,\n          prevId\n        ));\n        this.setState({\n          specialities: newMap,\n          specialityId: newId,\n          activeStage,\n        });\n        break;\n      case 'doctors':\n        prevId = this.state.doctorId[0];\n        ({ newMap, newId, activeStage } = this.selectProcessor(\n          newMap,\n          newId,\n          prevId\n        ));\n        const doctorId = [newId];\n        this.setState({\n          doctors: newMap,\n          doctorId,\n          activeStage,\n        });\n        break;\n      case 'schedule':\n        prevId = this.state.docDateTime;\n        ({ newMap, newId, activeStage } = this.selectProcessor(\n          newMap,\n          newId,\n          prevId\n        ));\n        const docDateTime = newId;\n        this.setState({\n          schedule: newMap,\n          docDateTime,\n          activeStage,\n        });\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  selectProcessor(newMap, newId, prevId) {\n    const currItem = newMap.get(newId);\n    newMap.set(newId, {\n      ...currItem,\n      selected: !currItem.selected,\n    });\n\n    if (prevId === newId) {\n      newId = undefined;\n    } else if (prevId !== undefined && prevId !== newId) {\n      const prevSpec = newMap.get(prevId);\n      newMap.set(prevId, {\n        ...prevSpec,\n        selected: false,\n      });\n    }\n    const activeStage = { ...this.state.activeStage, next: !!newId };\n    return {\n      newMap,\n      newId,\n      activeStage,\n    };\n  }\n\n  stageChangeHandler = (e, nextStage) => {\n    e.stopPropagation();\n    let newMap;\n    let prevApptId = this.state.prevApptId;\n    let schedule = undefined;\n    let specialityId = this.state.specialityId;\n    let doctorId = [...this.state.doctorId];\n    let specialities = this.state.specialities;\n    let doctors = this.state.doctors;\n    let docDateTime = this.state.docDateTime;\n    let newAppt = undefined;\n    const search = { ...this.state.search, empty: true, value: '' };\n    const activeStage = {\n      ...this.state.activeStage,\n      next: false,\n      type: nextStage,\n    };\n    /** if current stage is specialities or doctors - clean up maps from selected and not visible items\n     * On schedule stage we do not retain schedule map moving to the next stage\n     * If schedule is next stage (regardless of previous) we take doctorId array and recreate it\n     */\n    if (\n      this.state.activeStage.type === 'specialities' ||\n      this.state.activeStage.type === 'doctors' ||\n      this.state.activeStage.type === 'schedule'\n    ) {\n      newMap = new Map(this.state[this.state.activeStage.type]);\n      newMap.forEach((el, key) => {\n        if (el.visible === false) {\n          const newEl = { ...el, visible: true };\n          newMap.set(key, newEl);\n        }\n        if (el.selected === true) {\n          const newEl = { ...el, selected: false };\n          newMap.set(key, newEl);\n        }\n      });\n    }\n    if (this.state.activeStage.type === 'specialities') {\n      specialities = newMap;\n      if (nextStage === 'doctors') {\n        specialityId = undefined;\n      }\n    }\n    if (this.state.activeStage.type === 'doctors') {\n      doctors = newMap;\n      if (nextStage === 'specialities') {\n        doctorId = [undefined];\n      }\n    }\n\n    if (this.state.activeStage.type === 'schedule') {\n      schedule = newMap;\n      if (nextStage === 'specialities') {\n        /** emptying selected doctors and reversing schedule map to default */\n        doctorId = [undefined];\n      }\n      if (nextStage === 'confirm') {\n        activeStage.next = true;\n      }\n    }\n\n    if (\n      this.state.activeStage.type === 'confirm' ||\n      this.state.activeStage.type === 'confirmed'\n    ) {\n      activeStage.next = true;\n      if (nextStage === 'specialities') {\n        activeStage.next = false;\n        docDateTime = undefined;\n        doctorId = [undefined];\n      }\n      if (nextStage === 'confirmed') {\n        newAppt = this.updateSchedule();\n        doctorId = [undefined];\n        prevApptId = undefined;\n        docDateTime = undefined;\n      }\n    }\n    /** if next stage - schedule, regardless of previous stage, create schedule map based on doctorId */\n    if (nextStage === 'schedule') {\n      activeStage.next = false;\n      docDateTime = undefined;\n      /** handling case: specialityId is present and doctorId is empty */\n      if (!doctorId[0]) {\n        doctorId = [];\n        this.state.doctors.forEach((docInfo, docId) => {\n          if (specialityId === docInfo.speciality) {\n            doctorId.push(docId);\n          }\n        });\n        specialityId = undefined;\n      }\n      schedule = this.makeSchedule(doctorId);\n    }\n    this.setState({\n      activeStage,\n      specialityId,\n      doctorId,\n      doctors,\n      specialities,\n      search,\n      schedule,\n      docDateTime,\n      prevApptId,\n      newAppt,\n    });\n  };\n\n  makeSchedule(doctorId) {\n    const schedule = new Map();\n    this.props.scheduleGen.forEach((item) => {\n      for (const doc of doctorId) {\n        if (item.doctorId === doc && item.available) {\n          const datetime = moment(item.docDateTime.slice(5));\n          schedule.set(item.docDateTime, {\n            doctorId: item.doctorId,\n            date: datetime.format('YYYY-MM-DD'),\n            time: datetime.format('HH:mm'),\n            selected: false,\n          });\n        } else continue;\n      }\n    });\n    return schedule;\n  }\n\n  updateSchedule() {\n    /** changing  */\n    const appts = [...this.props.appts];\n    const scheduleGen = [...this.props.scheduleGen];\n    const docId = this.state.schedule.get(this.state.docDateTime).doctorId;\n    let prevDocDateTime, newApptId;\n\n    let newAppt = {\n      doctorId: docId,\n      speciality: this.state.specialities.get(\n        this.state.doctors.get(docId).speciality\n      ).title,\n      docFullName: this.state.doctors.get(docId).fullName,\n      dateTime:\n        this.state.schedule.get(this.state.docDateTime).date +\n        ' ' +\n        this.state.schedule.get(this.state.docDateTime).time,\n      date: this.state.schedule.get(this.state.docDateTime).date,\n      time: this.state.schedule.get(this.state.docDateTime).time,\n      docDateTime: this.state.docDateTime,\n      searchString:\n        this.state.doctors.get(docId).fullName.toLowerCase() +\n        ' ' +\n        this.state.specialities\n          .get(this.state.doctors.get(docId).speciality)\n          .title.toLowerCase(),\n    };\n    if (this.state.prevApptId) {\n      //modify edited appt and sort appts\n      newAppt.apptId = this.state.prevApptId;\n      this.props.appts.forEach((item, index) => {\n        if (item.apptId === this.state.prevApptId) {\n          prevDocDateTime = item.docDateTime;\n          appts[index] = newAppt;\n        }\n      });\n      this.props.fetchAppts(arraySortByProp(appts, 'dateTime', 'desc'));\n      newApptId = this.state.prevApptId;\n    } else {\n      //make new appt, add to appts and sort appts\n      do {\n        newApptId = Math.floor(Math.random() * 1000000)\n          .toString()\n          .padStart(6, '0');\n      } while (appts.find((item) => item.apptId === newApptId));\n\n      // while (true) {\n      //   newApptId = Math.floor(Math.random() * 1000000)\n      //     .toString()\n      //     .padStart(6, '0');\n      //   if (!appts.find((item) => item.apptId === newApptId)) break;\n      // }\n      newAppt.apptId = newApptId;\n      appts.push(newAppt);\n      this.props.fetchAppts(arraySortByProp(appts, 'dateTime', 'desc'));\n    }\n\n    this.props.scheduleGen.forEach((item, index) => {\n      if (prevDocDateTime) {\n        if (item.docDateTime === prevDocDateTime) {\n          const prevSchGenItem = { ...item, available: true };\n          scheduleGen[index] = prevSchGenItem;\n        }\n      }\n      if (item.docDateTime === this.state.docDateTime) {\n        const newSchGenItem = { ...item, available: false };\n        scheduleGen[index] = newSchGenItem;\n      }\n    });\n    this.props.editAppt({ initialStage: 'specialities' });\n    this.props.fetchScheduleGen(scheduleGen);\n    return newAppt;\n  }\n\n  componentDidMount() {\n    /** sorting array as per searchString, adding visible and selected, making map depending on type (specialities, doctors*/\n    const dataToMap = (array, type) => {\n      for (let i = 0; i < array.length; i++) {\n        if (type === 'specialities') {\n          array[i].searchString = array[i].title.toLowerCase();\n        } else if (type === 'doctors') {\n          const fullName =\n            array[i].surname +\n            ' ' +\n            array[i].firstName +\n            ' ' +\n            array[i].middleName;\n          array[i].searchString = fullName.toLowerCase();\n          array[i].fullName = fullName;\n        } else if ((type = 'schedule')) {\n          //search string is used for sorting\n        }\n        array[i].visible = true;\n        array[i].selected = false;\n      }\n\n      const sorted = array.sort((a, b) => {\n        if (a.searchString > b.searchString) return 1;\n        if (a.searchString < b.searchString) return -1;\n        if (a.searchString === b.searchString) return 0;\n      });\n      const newMap = new Map();\n      sorted.forEach((elem) => {\n        const { id, ...newElem } = elem;\n        newMap.set(elem.id, newElem);\n      });\n      return newMap;\n    };\n\n    const specialities = dataToMap(dataSpecialities, 'specialities');\n    const doctors = dataToMap(dataDoctors, 'doctors');\n    //this.props.fetchScheduleGen(dataScheduleProc);\n    let schedule;\n    if (this.state.activeStage.type === 'schedule') {\n      schedule = this.makeSchedule(this.state.doctorId);\n    }\n    const search = { ...this.state.search };\n    search.disabled = false;\n    this.setState((prevState) => {\n      return {\n        loading: false,\n        search,\n        specialities,\n        doctors,\n        schedule,\n      };\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.editAppt({ initialStage: 'specialities' });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <Spinner contentType='специальности' />;\n    }\n    let contents, stagePage, stageSwitch, search, btnBack, btnNext;\n    btnNext = (\n      <div className={this.props.classes.BtnForw}>\n        <IconButton\n          color='secondary'\n          disabled={!this.state.activeStage.next}\n          onClick={(e) =>\n            this.stageChangeHandler(\n              e,\n              this.state.stages[this.state.activeStage.type].next\n            )\n          }\n        >\n          <ArrowForward />\n        </IconButton>\n      </div>\n    );\n    if (\n      this.state.activeStage.type === 'specialities' ||\n      this.state.activeStage.type === 'doctors'\n    ) {\n      stageSwitch = (\n        <ApptSpecSwitch\n          alt={this.state.activeStage.type}\n          switchHandler={this.stageChangeHandler}\n        />\n      );\n      search = (\n        <div className={this.props.classes.Search}>\n          <Search\n            id='search_in_apptEditor'\n            value={this.state.search.value}\n            placeholder='Буквы русского алфавита, пробел'\n            disabled={this.state.search.disabled}\n            helperText={\n              this.state.search.empty ? null : 'Буквы русского алфавита, пробел'\n            }\n            label='Поиск...'\n            changeSearchHandler={this.changeSearchHandler}\n          />\n        </div>\n      );\n    }\n    if (this.state.activeStage.type === 'specialities') {\n      contents = (\n        <ApptSpecialities\n          specialities={this.state.specialities}\n          selectHandler={this.selectHandler}\n        >\n          {(buttonVisible) => {\n            if (!buttonVisible) return null;\n            return (\n              <ButtonMUI\n                color='secondary'\n                size='small'\n                onClick={(e) =>\n                  this.stageChangeHandler(\n                    e,\n                    this.state.stages[this.state.activeStage.type].next\n                  )\n                }\n              >\n                Далее\n              </ButtonMUI>\n            );\n          }}\n        </ApptSpecialities>\n      );\n    } else if (this.state.activeStage.type === 'doctors') {\n      contents = (\n        <ApptDoctors\n          doctors={this.state.doctors}\n          specialities={this.state.specialities}\n          selectHandler={this.selectHandler}\n        >\n          {(buttonVisible) => {\n            if (!buttonVisible) return null;\n            return (\n              <ButtonMUI\n                color='secondary'\n                size='small'\n                onClick={(e) =>\n                  this.stageChangeHandler(\n                    e,\n                    this.state.stages[this.state.activeStage.type].next\n                  )\n                }\n              >\n                Далее\n              </ButtonMUI>\n            );\n          }}\n        </ApptDoctors>\n      );\n    }\n    if (\n      this.state.activeStage.type === 'schedule' ||\n      this.state.activeStage.type === 'confirm'\n    ) {\n      btnBack = (\n        <div className={this.props.classes.BtnBack}>\n          <IconButton\n            color='secondary'\n            disabled={!this.state.activeStage.prev}\n            onClick={(e) =>\n              this.stageChangeHandler(\n                e,\n                this.state.stages[this.state.activeStage.type].prev\n              )\n            }\n          >\n            <ArrowBack />\n          </IconButton>\n        </div>\n      );\n    }\n    if (this.state.activeStage.type === 'schedule') {\n      if (!this.state.schedule) contents = null;\n      else {\n        contents = (\n          <ApptSchedule\n            docDateTime={this.state.docDateTime}\n            btnDisabled={!this.state.activeStage.next}\n            btnName='Подтвердить запись'\n            stageChangeHandler={(e) =>\n              this.stageChangeHandler(\n                e,\n                this.state.stages[this.state.activeStage.type].next\n              )\n            }\n            doctorId={this.state.doctorId}\n            doctors={this.state.doctors}\n            schedule={this.state.schedule}\n            specialities={this.state.specialities}\n            selectHandler={this.selectHandler}\n          />\n        );\n      }\n    }\n\n    if (\n      this.state.activeStage.type === 'confirm' ||\n      this.state.activeStage.type === 'confirmed'\n    ) {\n      contents = (\n        <ApptConfirm\n          activeStage={this.state.activeStage}\n          doctorId={this.state.doctorId}\n          docDateTime={this.state.docDateTime}\n          doctors={this.state.doctors}\n          schedule={this.state.schedule}\n          specialities={this.state.specialities}\n          apptId={this.state.prevApptId}\n          newAppt={this.state.newAppt}\n        >\n          {(btnName) => {\n            return (\n              <ButtonMUI\n                disableRipple\n                color='secondary'\n                size='medium'\n                disabled={!this.state.activeStage.next}\n                onClick={(e) =>\n                  this.stageChangeHandler(\n                    e,\n                    this.state.stages[this.state.activeStage.type].next\n                  )\n                }\n              >\n                {btnName}\n              </ButtonMUI>\n            );\n          }}\n        </ApptConfirm>\n      );\n    }\n\n    stagePage = (\n      <Fragment>\n        <div className={this.props.classes.MB1}>\n          {stageSwitch}\n          {search}\n        </div>\n        {contents}\n      </Fragment>\n    );\n\n    return (\n      <Fragment>\n        <div className={this.props.classes.MB1}>\n          <ApptProgress\n            stageChangeHandler={this.stageChangeHandler}\n            activeStage={this.state.activeStage}\n          />\n        </div>\n\n        {stagePage}\n        <div className={this.props.classes.MB2}>\n          {btnBack}\n          {btnNext}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nApptEditor.propTypes = {\n  activeStage: PropTypes.string.isRequired,\n  prevApptId: PropTypes.string,\n  doctorId: PropTypes.string,\n  specialityId: PropTypes.string,\n  docDateTime: PropTypes.string,\n  scheduleGen: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    scheduleGen: state.scheduleGen,\n    activeStage: state.apptEdited.initialStage,\n    prevApptId: state.apptEdited.apptId,\n    doctorId: state.apptEdited.doctorId,\n    specialityId: state.apptEdited.specialityId,\n    dateTimeSlot: state.apptEdited.dateTimeSlot,\n    appts: state.appts,\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchScheduleGen,\n  fetchAppts,\n  editAppt,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styleSheet)(ApptEditor));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst ApptsListFilter = props => {\n  const array = [\n    {\n      id: 'all',\n      rep: 'ВСЕ'\n    },\n    {\n      id: 'active',\n      rep: 'запланированные',\n    },\n    {\n      id: 'past',\n      rep: 'прошедшие',\n    }\n  ]\n\n  return array.map(item => {\n        return props.renderButtons(item.id, item.rep)\n      })}\n\nApptsListFilter.propTypes = {\n  filterId: PropTypes.string.isRequired,\n};\n\nfunction areEqual(prevProps, nextProps) {\n  if (prevProps.filterId === nextProps.filterId) return true;\n  else return false;\n}\n\nexport default React.memo(ApptsListFilter, areEqual);","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/styles';\nimport {Paper} from '@material-ui/core';\n\nimport { fetchScheduleGen, fetchAppts, editAppt } from '../../actions/actions';\nimport arraySortByProp from '../../utils/arraySortByProp';\nimport Search from '../UI/Search';\nimport Filter from './ApptsListFilter';\nimport SelectableButton from '../UI/SelectableButton';\nimport ApptsListLine from './ApptsListLine';\n\nconst styleSheet = (theme) => ({\n  Container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginBottom: theme.spacing(1),\n    \n  },\n  Item: {\n    paddingBottom: theme.spacing(0.5),\n    '&:not(:last-child)': {\n      paddingRight: theme.spacing(1),\n    },\n  },\n  ML: {\n    marginLeft: 'auto',\n  },\n  paper: {\n    paddingLeft: theme.spacing(1),\n  }\n});\n\nclass ApptsList extends Component {\n  state = {\n    search: {\n      value: '',\n      empty: true,\n    },\n    filterId: 'all',\n    filterThresh: new Date().toISOString().slice(0, 10),\n  };\n\n  changeFilterHandler = (e, btnId) => {\n    if (btnId === this.state.filterId) return;\n    this.changeSearchHandler('');\n    this.setState((prevState) => {\n      if (prevState.filterId === btnId) return null;\n      return {\n        filterId: btnId,\n      };\n    });\n  };\n\n  changeSearchHandler = (refined) => {\n    const search = { ...this.state.search };\n    search.value = refined;\n    search.empty = !Boolean(refined.length);\n\n    this.setState((prevState) => {\n      if (prevState.search.value === search.value) return null;\n      return {\n        search,\n      };\n    });\n  };\n\n  editApptHandler = (e, apptId) => {\n    /** (1) updating redux state for edit appt\n     * (2) navigating to apptEditor\n     */\n    const appt = this.props.appts.find((item) => item.apptId === apptId);\n    const apptEdited = {\n      doctorId: appt.doctorId,\n      apptId: apptId,\n      docDateTime: appt.docDateTime,\n      initialStage: 'schedule',\n    };\n    this.props.editAppt(apptEdited);\n    this.props.history.push('/apptEditor');\n  };\n\n  deleteApptHandler = (apptId) => {\n    let apptToDeleteIndex;\n    const apptToDelete = this.props.appts.find((item, index) => {\n      if (item.apptId === apptId) {\n        apptToDeleteIndex = index;\n        return true;\n      }\n    });\n    const appts = [\n      ...this.props.appts.slice(0, apptToDeleteIndex),\n      ...this.props.appts.slice(apptToDeleteIndex + 1),\n    ];\n\n    const scheduleGen = [...this.props.scheduleGen];\n\n    this.props.scheduleGen.forEach((item, index) => {\n      if (item.docDateTime === apptToDelete.docDateTime) {\n        const newSchGenItem = { ...item, available: true };\n        scheduleGen[index] = newSchGenItem;\n      }\n    });\n    this.props.fetchAppts(arraySortByProp(appts, 'dateTime', 'desc'));\n    this.props.fetchScheduleGen(scheduleGen);\n    return apptToDelete;\n  };\n\n  render() {\n    let searchDisabled = false,\n      contents,\n      filteredList;\n\n    if (this.props.appts.length === 0) {\n      searchDisabled = true;\n      contents = 'Записи отстутствуют';\n    } else {\n      filteredList = this.props.appts.filter((item) => {\n        let result = true;\n        if (this.state.filterId === 'all') result = true && result;\n        if (this.state.filterId === 'active')\n          result = item.dateTime > this.state.filterThresh && result;\n        if (this.state.filterId === 'past')\n          result = item.dateTime < this.state.filterThresh && result;\n        if (this.state.search.value !== '')\n          result =\n            item.searchString.includes(this.state.search.value.toLowerCase()) &&\n            result;\n        return result;\n      });\n      if (filteredList.length === 0) {\n        contents = 'Записи с заданными условиями отсутствуют';\n      } else {\n        contents = filteredList.map((item) => {\n          return (\n            <ApptsListLine\n              key={item.docDateTime}\n              appt={item}\n              showButtons={true}\n              deleteApptHandler={this.deleteApptHandler}\n              editApptHandler={this.editApptHandler}\n              apptStatus={\n                item.dateTime > this.state.filterThresh ? 'Active' : 'Past'\n              }\n            />\n          );\n        });\n      }\n    }\n    return (\n      <Fragment>\n        <div className={this.props.classes.Container}>\n          <Filter\n            renderButtons={(btnId, btnName) => (\n              <div key={btnId} className={this.props.classes.Item}>\n                <SelectableButton\n                  size='small'\n                  variant='outlined'\n                  color='primary'\n                  selected={btnId === this.state.filterId}\n                  onClick={(e) => this.changeFilterHandler(e, btnId)}\n                >\n                  {btnName}\n                </SelectableButton>\n              </div>\n            )}\n            filterId={this.state.filterId}\n          />\n          <div className={clsx(this.props.classes.Item, this.props.classes.ML)}>\n            <Search\n              id='search_in_apptsList'\n              value={this.state.search.value}\n              placeholder='Буквы русского алфавита, пробел'\n              disabled={searchDisabled}\n              helperText={\n                this.state.search.empty\n                  ? null\n                  : 'Буквы русского алфавита, пробел'\n              }\n              label='ФИО / специальность'\n              changeSearchHandler={this.changeSearchHandler}\n            />\n          </div>\n        </div>\n\n        <Paper className={this.props.classes.paper}>{contents}</Paper>\n      </Fragment>\n    );\n  }\n}\n\nconst StyledApptsList = withStyles(styleSheet)(ApptsList);\n\nApptsList.propTypes = {\n  appts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    appts: state.appts || [],\n    scheduleGen: state.scheduleGen,\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchScheduleGen,\n  fetchAppts,\n  editAppt,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StyledApptsList);\n","\nconst validate = (value, rules) => {\n  let isValid = true;\n\n  if (rules.required) {\n    isValid = value.trim() !== '' && isValid;\n    if (!isValid) return { isValid, message: 'Поле не должно быть пустым' };\n  }\n  if (rules.notEqualList) {\n    isValid = !rules.notEqualList.includes(value.toUpperCase()) && isValid;\n    if (!isValid)\n      return { isValid, message: 'Поле дублирует значение другого поля' };\n  }\n\n  if (rules.number) {\n    isValid = !Number.isNaN(value) && isValid;\n    if (!isValid) return { isValid, message: 'Допускаются только числа' };\n  }\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n    if (!isValid)\n      return {\n        isValid,\n        message: `Минимальная длина значения ${rules.minLength}`,\n      };\n  }\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n    if (!isValid)\n      return {\n        isValid,\n        message: `Максимальная длина значения ${rules.maxLength}`,\n      };\n  }\n  if (rules.min) {\n    isValid = value >= rules.min && isValid;\n    if (!isValid)\n      return {\n        isValid,\n        message: `Минимальная значение вводимого числа ${rules.min}`,\n      };\n  }\n  if (rules.max) {\n    isValid = value <= rules.max && isValid;\n    if (!isValid)\n      return {\n        isValid,\n        message: `Максимальное значение вводимого числа ${rules.max}`,\n      };\n  }\n  if (rules.regexp && value.toString().length > 0) {\n    const [{ regexp, message }] = rules.regexp.filter(\n      (item) =>\n        value.toString().length >= item.minmax[0] &&\n        value.toString().length <= item.minmax[1]\n    );\n    const match = !!value.match(regexp);\n    isValid = match && isValid;\n    if (!isValid) return { isValid, message };\n  }\n\n  return { isValid, message: null };\n};\n\nexport default validate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Input.module.scss';\n\nconst Input = (props) => {\n  const inputMessage = !props.readOnly && props.inputMessage ? props.inputMessage : <span>&nbsp;</span>;\n\n  return (\n    <div\n      className={clsx(\n        styles.Input,\n        !props.readOnly && styles.Editable,\n        props.touched && styles.Touched,\n        !props.valid && styles.Invalid\n      )}\n    >\n      \n      <input\n        className={styles.InputSpan}\n        id={props.id}\n        type={props.elementConfig.type}\n        {...props.elementConfig}\n        value={props.value}\n        onChange={props.changed}\n        onBlur={props.blurred}\n        readOnly={props.readOnly}\n      />\n      <label htmlFor={props.id} className={styles.LabelSpan}>\n        {props.label}\n      </label>\n      <div className={styles.HelperSpan}>{inputMessage}</div>\n    </div>\n  );\n};\n\nInput.propTypes = {\n  elementType: PropTypes.string.isRequired,\n  elementConfig: PropTypes.object,\n  value: PropTypes.string,\n  label: PropTypes.string,\n  valid: PropTypes.bool,\n  touched: PropTypes.bool,\n  changed: PropTypes.func,\n  message: PropTypes.string,\n};\n\nexport default Input;\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button as ButtonMUI } from '@material-ui/core';\n\nimport { fetchPersonalData } from '../../actions/actions';\nimport validate from '../../utils/inputValidation';\nimport styles from './Personal.module.scss';\nimport Input from '../UI/Input';\n\nclass PersonalData extends Component {\n  state = {\n    data: new Map([\n      [\n        'surname',\n        {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: null,\n          },\n          value: this.props.personalData.surname,\n          label: 'Фамилия',\n          validation: {\n            regexp: [\n              {\n                minmax: [1, 1],\n                regexp: /[a-z\\u0430-\\u044f]/i,\n                message:\n                  'допускаются только русские или латинские символы, тире и пробел!',\n              },\n              {\n                minmax: [2, 1000000],\n                regexp: /^[a-z\\u0430-\\u044f][-a-z\\u0430-\\u044f\\s]*[a-z\\u0430-\\u044f\\s]$/i,\n                message: 'допускаются только русские или латинские символы!',\n              },\n            ],\n          },\n          valid: true,\n          touched: false,\n          inputDefaultMessage:\n            'используйте только русские или латинские буквы, пробелы, тире',\n        },\n      ],\n      [\n        'firstName',\n        {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: null,\n          },\n          value: this.props.personalData.firstName,\n          label: 'Имя',\n          validation: {\n            regexp: [\n              {\n                minmax: [1, 1],\n                regexp: /[a-z\\u0430-\\u044f]/i,\n                message:\n                  'допускаются только русские или латинские символы, тире и пробел!',\n              },\n              {\n                minmax: [2, 1000000],\n                regexp: /^[a-z\\u0430-\\u044f][-?a-z\\u0430-\\u044f\\s]*[a-z\\u0430-\\u044f\\s]$/i,\n                message: 'допускаются только русские или латинские символы!',\n              },\n            ],\n          },\n          valid: true,\n          touched: false,\n          inputDefaultMessage:\n            'используйте только русские или латинские буквы, пробелы, тире',\n        },\n      ],\n      [\n        'middleName',\n        {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: null,\n          },\n          value: this.props.personalData.middleName,\n          label: 'Отчество',\n          validation: {\n            regexp: [\n              {\n                minmax: [1, 1],\n                regexp: /[a-z\\u0430-\\u044f]/i,\n                message:\n                  'допускаются только русские или латинские символы, тире и пробел!',\n              },\n              {\n                minmax: [2, 1000000],\n                regexp: /^[a-z\\u0430-\\u044f][-a-z\\u0430-\\u044f\\s]*[a-z\\u0430-\\u044f\\s]$/i,\n                message: 'допускаются только русские или латинские символы!',\n              },\n            ],\n          },\n          valid: true,\n          touched: false,\n          inputDefaultMessage:\n            'используйте только русские или латинские буквы, пробелы, тире',\n        },\n      ],\n      [\n        'phone',\n        {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: null,\n          },\n          value: this.props.personalData.phone,\n          label: 'Телефон*',\n          validation: {\n            regexp: [\n              {\n                minmax: [1, 20],\n                regexp: /\\+7 \\(([0-9]){3}\\) ([0-9]){3} ([0-9]){2} ([0-9]){2}/,\n                message: 'необходимо полностью ввести цифры телефона!',\n              },\n            ],\n          },\n          valid: true,\n          touched: false,\n        },\n      ],\n      [\n        'email',\n        {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: null,\n          },\n          value: this.props.personalData.email,\n          label: 'Эл.почта',\n          validation: {\n            maxLength: 50,\n            regexp: [\n              {\n                minmax: [1, 500],\n                regexp: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,5})+$/,\n                message:\n                  'оставьте поле пустым или введите эл.почту example@example.ru!',\n              },\n            ],\n          },\n          valid: true,\n          touched: false,\n        },\n      ],\n      [\n        'login',\n        {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: null,\n          },\n          value: this.props.personalData.login,\n          label: 'Логин*',\n          validation: {\n            minLength: 6,\n            maxLength: 20,\n            regexp: [\n              {\n                minmax: [1, 500],\n                regexp: /^[a-z0-9]{6,20}$/i,\n                message: 'в поле допускаются только латинские буквы и цифры!',\n              },\n            ],\n          },\n          valid: true,\n          touched: false,\n          inputDefaultMessage:\n            'латинские заглавные и/или строчные буквы и цифры, мин. 6, максимум 20 символов',\n        },\n      ],\n    ]),\n  };\n\n  changeStageHandler = (e, type) => {\n    const data = new Map(this.state.data);\n    if (type === 'save') {\n      const personalData = {};\n      data.forEach((info, key) => {\n        personalData[key] = info.value;\n        data.set(key, { ...info, touched: false, valid: true });\n      });\n      this.props.fetchPersonalData(personalData);\n    } else if (type === 'cancel') {\n      data.forEach((info, key) => {\n        data.set(key, {\n          ...info,\n          value: this.props.personalData[key],\n          touched: false,\n          valid: true,\n        });\n      });\n    }\n    this.setState({\n      data,\n    });\n    this.props.changeStage(null, 'main');\n  };\n\n  changeInputHandler = (e, input) => {\n    if (!this.state.data.get(input).wasChanged && e.type === 'blur') return;\n    const data = new Map(this.state.data);\n    const inputElement = { ...data.get(input) };\n    let valid, message;\n    if (e.type === 'change') {\n      inputElement.wasChanged = true;\n      inputElement.value = e.target.value;\n      if (input === 'phone') {\n        const regexp = /[0-9]+/g;\n        let matchedRaw = e.target.value.match(regexp);\n\n        if (!matchedRaw) matchedRaw = ['7'];\n        else if (matchedRaw[0] !== '7') matchedRaw.unshift('7');\n        const matched = matchedRaw.join('').padEnd(11, '_');\n\n        inputElement.value = `+7 (${matched.slice(1, 4)}) ${matched.slice(\n          4,\n          7\n        )} ${matched.slice(7, 9)} ${matched.slice(9, 11)}`;\n      }\n    } else if (e.type === 'blur') {\n      inputElement.wasChanged = undefined;\n      if (\n        input === 'surname' ||\n        input === 'firstName' ||\n        input === 'middleName'\n      ) {\n        const capitalize = (string) => {\n          const str = string.trim();\n          return (str.charAt(0).toUpperCase() + str.slice(1))\n            .replace(/\\s{2,}/g, ' ')\n            .replace(/-{2,}/g, '-');\n        };\n        inputElement.value = capitalize(e.target.value);\n      } else inputElement.value = e.target.value.trim();\n    }\n    if (inputElement.validation) {\n      ({ isValid: valid, message } = validate(\n        inputElement.value,\n        inputElement.validation\n      ));\n    }\n    inputElement.valid = valid;\n    if (valid && inputElement.inputInvalidMessage)\n      inputElement.inputInvalidMessage = undefined;\n    else inputElement.inputInvalidMessage = message;\n    if (this.props.personalData[input] !== inputElement.value)\n      inputElement.touched = true;\n    else inputElement.touched = false;\n    data.set(input, inputElement);\n    this.setState({\n      data,\n    });\n  };\n\n  render() {\n    const { renderButtons, dataInputsReadOnly } = this.props;\n    const { data } = this.state;\n    let inputsAllValid = true;\n    let inputsAnyTouched = false;\n    data.forEach((value, key) => {\n      inputsAnyTouched = value.touched || inputsAnyTouched;\n      inputsAllValid = value.valid && inputsAllValid;\n    });\n    const saveBtnDisabled = !inputsAnyTouched || !inputsAllValid;\n\n    const buttons = renderButtons ? (\n      <div className={styles.Buttons}>\n        <ButtonMUI\n            color='secondary'\n            size='medium'\n            onClick={(e) => this.changeStageHandler(e, 'cancel')}\n          >\n            Не сохранять\n          </ButtonMUI>\n          <ButtonMUI\n            color='secondary'\n            size='medium'\n            disabled={saveBtnDisabled}\n            onClick={(e) => this.changeStageHandler(e, 'save')}\n          >\n            Сохранить\n          </ButtonMUI>\n      </div>\n    ) : null;\n\n    return (\n      <Fragment>\n        <div className={styles.FormContents}>\n          <span className={styles.Remark}>*поля обязательные для заполнения</span>\n          {Array.from(data, ([key, value]) => {\n            let inputMessage;\n\n            if (value.inputInvalidMessage) {\n              inputMessage = value.inputInvalidMessage;\n            } else if (value.inputDefaultMessage) {\n              inputMessage = value.inputDefaultMessage;\n            }\n            return (\n              <Input\n                key={key}\n                id={key}\n                elementType={value.elementType}\n                value={value.value}\n                label={value.label}\n                valid={value.valid}\n                touched={value.touched}\n                elementConfig={value.elementConfig}\n                readOnly={dataInputsReadOnly}\n                changed={(e) => this.changeInputHandler(e, key)}\n                blurred={(e) => this.changeInputHandler(e, key)}\n                inputMessage={inputMessage}\n              />\n            );\n          })}\n        </div>\n        {buttons}\n      </Fragment>\n    );\n  }\n}\n\nPersonalData.propTypes = {\n  renderButtons: PropTypes.bool.isRequired,\n  dataInputsReadOnly: PropTypes.bool.isRequired,\n  changeStage: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    personalData: state.personalData,\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchPersonalData,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PersonalData);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Button as ButtonMUI } from '@material-ui/core';\n\nimport { fetchPersonalPwr } from '../../actions/actions';\nimport validate from '../../utils/inputValidation';\nimport styles from './Personal.module.scss';\nimport Input from '../UI/Input';\n\nclass PersonalPwr extends Component {\n  state = {\n    data: new Map([\n      [\n        'oldPwr',\n        {\n          elementType: 'input',\n          elementConfig: {\n            type: 'password',\n            placeholder: null,\n          },\n          value: '',\n          label: 'Старый пароль',\n          valid: true,\n          touched: false,\n          readOnly: false,\n          inputDefaultMessage: `тестовый пароль ${this.props.personalPwr}`,\n        },\n      ],\n      [\n        'newPwr',\n        {\n          elementType: 'input',\n          elementConfig: {\n            type: 'password',\n            placeholder: null,\n          },\n          value: '',\n          label: 'Новый пароль',\n          validation: {\n            required: true,\n            minLength: 6,\n            maxLength: 20,\n            regexp: [\n              {\n                minmax: [6, 20],\n                regexp: /^[0-9a-z*!$@?]{6,20}$/gi,\n                message:\n                  'допускаются только латинские буквы, цифры и символы: *, !, ?, $, @ ',\n              },\n            ],\n          },\n          valid: true,\n          readOnly: true,\n          touched: false,\n          inputDefaultMessage:\n            'используйте только латинские буквы, цифры и символы: *, !, ?, $, @',\n        },\n      ],\n      [\n        'newPwrConfirm',\n        {\n          elementType: 'input',\n          elementConfig: {\n            type: 'password',\n            placeholder: null,\n          },\n          value: '',\n          label: 'Подтвердите новый пароль',\n          valid: true,\n          readOnly: true,\n          touched: false,\n        },\n      ],\n    ]),\n  };\n\n  changeStageHandler = (e, type) => {\n    if (type === 'save') {\n      this.props.fetchPersonalPwr(this.state.data.get('newPwr').value);\n    }\n    this.props.changeStage(null, 'main');\n  };\n\n  changeInputHandler = (e, input) => {\n    const data = new Map(this.state.data);\n    const inputElement = {\n      ...data.get(input),\n    };\n    if (input === 'oldPwr') {\n      const newPwrElement = {\n        ...data.get('newPwr'),\n      };\n      const newPwrConfirmElement = {\n        ...data.get('newPwrConfirm'),\n      };\n      inputElement.value = e.target.value;\n      inputElement.valid = false;\n      inputElement.touched = true;\n      if (inputElement.value === this.props.personalPwr) {\n        inputElement.valid = true;\n        newPwrElement.readOnly = false;\n        newPwrConfirmElement.readOnly = false;\n      }\n      data.set(input, inputElement);\n      data.set('newPwr', newPwrElement);\n      data.set('newPwrConfirm', newPwrConfirmElement);\n    }\n    if (input === 'newPwr') {\n      inputElement.value = e.target.value;\n      inputElement.touched = true;\n      const newPwrConfirmElement = {\n        ...data.get('newPwrConfirm'),\n      };\n      const { isValid: valid, message } = validate(\n        inputElement.value,\n        inputElement.validation\n      );\n      inputElement.valid = valid;\n      if (valid && inputElement.inputInvalidMessage)\n        inputElement.inputInvalidMessage = undefined;\n      else inputElement.inputInvalidMessage = message;\n      if (newPwrConfirmElement.touched) {\n        if (inputElement.value === newPwrConfirmElement.value) {\n          newPwrConfirmElement.valid = true;\n          newPwrConfirmElement.inputInvalidMessage = undefined;\n        } else {\n          newPwrConfirmElement.valid = false;\n          newPwrConfirmElement.inputInvalidMessage =\n            'введенный пароль не совпадает';\n        }\n      }\n      data.set(input, inputElement);\n      data.set('newPwrConfirm', newPwrConfirmElement);\n    }\n    if (input === 'newPwrConfirm') {\n      inputElement.value = e.target.value;\n      inputElement.touched = true;\n      if (inputElement.value === this.state.data.get('newPwr').value) {\n        inputElement.valid = true;\n        inputElement.inputInvalidMessage = undefined;\n      } else {\n        inputElement.valid = false;\n        inputElement.inputInvalidMessage =\n          'новый пароль введен повторно неверно!';\n      }\n      data.set(input, inputElement);\n    }\n\n    this.setState({\n      data,\n    });\n  };\n\n  toggleVisibility = (e, input) => {\n    const data = new Map(this.state.data);\n    const inputElement = {\n      ...data.get(input),\n      elementConfig: { ...data.get(input).elementConfig },\n    };\n    inputElement.elementConfig.type =\n      inputElement.elementConfig.type === 'password' ? 'text' : 'password';\n    data.set(input, inputElement);\n    this.setState({\n      data,\n    });\n  };\n\n  render() {\n    let inputsAllValid = true;\n    let inputsAllTouched = true;\n    this.state.data.forEach((value, key) => {\n      inputsAllTouched = value.touched && inputsAllTouched;\n      inputsAllValid = value.valid && inputsAllValid;\n    });\n    const saveBtnDisabled = !inputsAllTouched || !inputsAllValid;\n    return (\n      <Fragment>\n        <div className={styles.FormContents}>\n          {Array.from(this.state.data, ([key, value]) => {\n            let inputMessage;\n\n            if (value.inputInvalidMessage) {\n              inputMessage = value.inputInvalidMessage;\n            } else if (value.inputDefaultMessage) {\n              inputMessage = value.inputDefaultMessage;\n            }\n            return (\n              <Fragment key={key}>\n                <Input\n                  key={key}\n                  elementType={value.elementType}\n                  value={value.value}\n                  label={value.label}\n                  valid={value.valid}\n                  touched={value.touched}\n                  elementConfig={value.elementConfig}\n                  readOnly={this.state.data.get(key).readOnly}\n                  changed={(e) => this.changeInputHandler(e, key)}\n                  inputMessage={inputMessage}\n                />\n                <ButtonMUI\n                  key={'btnToggle' + key}\n                  color='primary'\n                  size='small'\n                  disabled={value.readOnly}\n                  onClick={(e) => this.toggleVisibility(e, key)}\n                >\n                  Показать пароль\n                </ButtonMUI>\n              </Fragment>\n            );\n          })}\n        </div>\n        <div className={styles.Buttons}>\n          <ButtonMUI\n            color='secondary'\n            size='medium'\n            onClick={(e) => this.changeStageHandler(e, 'cancel')}\n          >\n            Назад\n          </ButtonMUI>\n          <ButtonMUI\n            color='secondary'\n            size='medium'\n            disabled={saveBtnDisabled}\n            onClick={(e) => this.changeStageHandler(e, 'save')}\n          >\n            Сохранить\n          </ButtonMUI>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nPersonalPwr.propTypes = {};\n\nconst mapStateToProps = (state) => {\n  return {\n    personalPwr: state.personalPwr,\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchPersonalPwr,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PersonalPwr);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport clsx from 'clsx';\nimport { Button as ButtonMUI } from '@material-ui/core';\n\nimport styles from './Personal.module.scss';\nimport { fetchPersonalImage } from '../../actions/actions';\nimport blankImage from '../../images/imageBlank.svg';\nimport PersonalData from './PersonalData';\nimport PersonalPwr from './PersonalPwr';\n\nclass Personal extends Component {\n  constructor(props) {\n    super(props);\n    this.inputFoto = React.createRef();\n    this.state = {\n      currStage: 'main',\n      blankImage: false,\n      fotoMsg: 'Фотографии jpeg или png, максимальный размер 2 МБ',\n      fotoMsgError: false,\n      elements: {\n        fotoBtns: { main: true, editData: false, editPwr: false },\n        btnsEdit: { main: true, editData: false, editPwr: false }, //edit psw and edit data block\n        dataInputsReadOnly: { main: true, editData: false, editPwr: true },\n        personalPwr: { main: false, editData: false, editPwr: true },\n        personalData: { main: true, editData: true, editPwr: false },\n        breadCrumbsExtra: {\n          main: null,\n          editData: ' Редактирование данных',\n          editPwr: ' Изменение пароля',\n        },\n      },\n    };\n  }\n\n  fotoUploadHandler = (e) => {\n    e.preventDefault();\n    const file = e.target.files[0];\n    if (file) {\n      if (\n        file.size <= 1048576 * 2 &&\n        (file.type === 'image/png' || file.type === 'image/jpeg')\n      ) {\n        const localImageUrl = window.URL.createObjectURL(file);\n        this.props.fetchPersonalImage(localImageUrl);\n        window.URL.revokeObjectURL(file);\n        this.setState({\n          blankImage: false,\n          fotoMsg: 'Фотографии jpeg или png, максимальный размер 2 МБ',\n          fotoMsgError: false,\n        });\n      } else if (!(file.type === 'image/png' || file.type === 'image/jpeg')) {\n        this.setState({\n          fotoMsg:\n            'Не удалось загрузить: выберете файл с расширением jp(e)g или png.',\n          fotoMsgError: true,\n        });\n      } else if (file.size > 1048576 * 2) {\n        this.setState({\n          fotoMsg: 'Не удалось загрузить: выбран слишком большой файл.',\n          fotoMsgError: true,\n        });\n      }\n    }\n  };\n\n  fotoDelete = () => {\n    this.props.fetchPersonalImage(blankImage);\n    this.setState({\n      blankImage: true,\n      fotoMsg: 'Фотографии jpeg или png, max 2 МБ',\n    });\n  };\n\n  changeStage = (e, nextStage) => {\n    this.setState({ currStage: nextStage });\n  };\n\n  render() {\n    const { currStage, elements } = this.state;\n\n    const breadCrumbsExtra = elements.breadCrumbsExtra[currStage] ? (\n      <span>{elements.breadCrumbsExtra[currStage]}</span>\n    ) : null;\n\n    const fotoBtns = elements.fotoBtns[currStage] ? (\n      <div className={styles.FotoButtons}>\n        <div className={styles.BtnUploadCont}>\n          <div className={styles.BtnUpload}>\n            <input\n              type='file'\n              ref={this.inputFoto}\n              onChange={this.fotoUploadHandler}\n            />\n            <ButtonMUI\n              color='secondary'\n              size='small'\n              onClick={(e) => this.inputFoto.current.click()}\n            >\n              Загрузить фото\n            </ButtonMUI>\n          </div>\n          <div\n            className={clsx(\n              styles.BtnUploadComment,\n              this.state.fotoMsgError && styles.BtnUploadError\n            )}\n          >\n            {this.state.fotoMsg}\n          </div>\n        </div>\n        <div className={styles.BtnDelete}>\n          <ButtonMUI\n            color='secondary'\n            size='small'\n            disabled={this.state.blankImage}\n            onClick={this.fotoDelete}\n          >\n            Удалить фото\n          </ButtonMUI>\n        </div>\n      </div>\n    ) : null;\n    /** edit personal data form */\n    const personalData = elements.personalData[currStage] ? (\n      <PersonalData\n        renderButtons={!elements.btnsEdit[currStage]}\n        dataInputsReadOnly={elements.dataInputsReadOnly[currStage]}\n        changeStage={this.changeStage}\n      />\n    ) : null;\n\n    const personalPwr = elements.personalPwr[currStage] ? (\n      <PersonalPwr\n        renderButtons={!elements.btnsEdit[currStage]}\n        changeStage={this.changeStage}\n      />\n    ) : null;\n\n    /** buttons Edit Pwr and Edit Data */\n    const buttons = elements.btnsEdit[currStage] ? (\n      <div className={styles.Buttons}>\n        <ButtonMUI\n          color='secondary'\n          size='medium'\n          onClick={(e) => this.changeStage(e, 'editPwr')}\n        >\n          Изменить пароль\n        </ButtonMUI>\n        <ButtonMUI\n          color='secondary'\n          size='medium'\n          onClick={(e) => this.changeStage(e, 'editData')}\n        >\n          Изменить данные\n        </ButtonMUI>\n      </div>\n    ) : null;\n\n    return (\n      <div className={styles.Personal}>\n        <div className={styles.BreadCrumbs}>\n          <span>ЛИЧНЫЕ ДАННЫЕ</span>\n          {breadCrumbsExtra}\n        </div>\n        <div className={styles.Contents}>\n          <div className={styles.Foto}>\n            <div className={styles.FotoPicture}>\n              <img\n                alt=\"\"\n                className={styles.Picture}\n                width={150}\n                src={this.props.personalImage}\n              />\n            </div>\n            {fotoBtns}\n          </div>\n          <div className={styles.Form}>\n            {personalData}\n            {personalPwr}\n            {buttons}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPersonal.propTypes = {\n  personalImage: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    personalImage: state.personalImage,\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchPersonalImage,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Personal);\n","import React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { CssBaseline } from '@material-ui/core';\n\nimport { fetchAppts, fetchScheduleGen } from './actions/actions';\nimport dataApptsProc from './data/dataAppts';\nimport dataScheduleProc from './data/dataScheduleProc';\nimport arraySortByProp from './utils/arraySortByProp';\n\nimport Layout from './components/Layout/Layout';\nimport Dash from './components/Dash/Dash';\nimport ApptEditor from './components/Appts/ApptEditor';\nimport ApptsList from './components/ApptsList/ApptsList';\nimport Personal from './components/Personal/Personal';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchAppts(arraySortByProp(dataApptsProc, 'dateTime', 'desc'));\n    this.props.fetchScheduleGen(dataScheduleProc);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <CssBaseline />\n        <Layout>\n          <Switch>\n            <Route path='/' exact component={Dash} />\n            <Route\n              path='/apptEditor'\n              component={ApptEditor}\n            />\n            <Route\n              path='/apptsList'\n              component={ApptsList}\n            />\n            <Route\n              path='/personal'\n              component={Personal}\n            />\n          </Switch>\n        </Layout>\n      </Fragment>\n\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchAppts,\n  fetchScheduleGen,\n};\n\nexport default connect(\n  undefined,\n  mapDispatchToProps\n)(App);\n","import React, { Component } from 'react';\n \nclass ErrorBoundary extends Component {\n\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch() {\n    this.setState({hasError: true});\n  }\n\n  render() { \n    if (this.state.hasError) {\n      return <div>ERROR BOUNDARY HIT!</div>\n    }\n    return this.props.children;\n  }\n}\n \nexport default ErrorBoundary;","import image from '../images/img.jpg';\nimport {\n  FETCH_SCHEDULEGEN,\n  FETCH_APPTS,\n  EDIT_APPT,\n  FETCH_PERSONALIMAGE,\n  FETCH_PERSONALPWR,\n  FETCH_PERSONALDATA,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  scheduleGen: undefined,\n  appts: undefined,\n  apptEdited: {\n    doctorId: undefined,\n    appttId: undefined,\n    docDateTime: undefined,\n    initialStage: 'specialities',\n  },\n  personalData: {\n    surname: 'Иванова',\n    firstName: 'Мария',\n    middleName: 'Ивановна',\n    phone: '+7 (999) 123 45 67',\n    email: 'test@test.ru',\n    login: 'ivanova79',\n  },\n  personalImage: image,\n  personalPwr: 'test123456',\n  error: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_SCHEDULEGEN:\n      return {\n        ...state,\n        scheduleGen: action.payload,\n      };\n    case FETCH_APPTS:\n      return {\n        ...state,\n        appts: action.payload,\n      };\n    case EDIT_APPT:\n      return {\n        ...state,\n        apptEdited: action.payload,\n      };\n    case FETCH_PERSONALDATA:\n      return {\n        ...state,\n        personalData: action.payload,\n      };\n      case FETCH_PERSONALIMAGE:\n      return {\n        ...state,\n        personalImage: action.payload,\n      };\n      case FETCH_PERSONALPWR:\n      return {\n        ...state,\n        personalPwr: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, compose, applyMiddleware} from 'redux';\n\nimport reducer from './reducers/reducer';\n\nconst logMiddleware = ({getState, dispatch}) => (next) => (action) => {\n  return next(action);\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(\n    logMiddleware\n  ))\n  \n);\n\nexport default store;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2AB5F4',\n    },\n    secondary: {\n      main: '#f42ab5',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport ErrorBoundary from './error/ErrorBoundary';\nimport store from './store';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundary>\n      <BrowserRouter>\n        <MuiThemeProvider theme={theme}>\n          <App />\n        </MuiThemeProvider>\n      </BrowserRouter>\n    </ErrorBoundary>\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Department\":\"ApptSpecialities_Department__1pq62\",\"Header\":\"ApptSpecialities_Header__Z4hzx\",\"Contents\":\"ApptSpecialities_Contents__QpCJN\",\"Item\":\"ApptSpecialities_Item__2taCp\",\"Span\":\"ApptSpecialities_Span__3Omia\",\"BtnSpan\":\"ApptSpecialities_BtnSpan__3e8cs\",\"MuiButton-sizeSmall\":\"ApptSpecialities_MuiButton-sizeSmall__2cbh3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1-rpP\",\"LabelSpan\":\"Input_LabelSpan__3Njmm\",\"InputSpan\":\"Input_InputSpan__2GXSu\",\"HelperSpan\":\"Input_HelperSpan__E_I46\",\"Editable\":\"Input_Editable__1tyE5\",\"Touched\":\"Input_Touched__3lTd_\",\"Invalid\":\"Input_Invalid__1Qs4U\"};","module.exports = __webpack_public_path__ + \"static/media/docMale.269f4559.jpg\";","module.exports = __webpack_public_path__ + \"static/media/docFemale.a6b65863.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CustomCalendar\":\"Calendar_CustomCalendar__1VUGL\",\"Today\":\"Calendar_Today__2myMb\",\"Appt\":\"Calendar_Appt__3kmQa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Dash_Section__3eids\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Span\":\"SelectableSpan_Span__2GIrT\",\"Selected\":\"SelectableSpan_Selected__1Oxu2\"};"],"sourceRoot":""}